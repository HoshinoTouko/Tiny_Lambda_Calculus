please input a lambda term with ";":
K is defined: (@y.(@x.(y:2)))
the type of expression is: (A -> (B -> A))
I is defined: (@x.(x:1))
the type of expression is: (A -> A)
S is defined: (@x.(@y.(@z.(((x:3)(z:1))((y:2)(z:1))))))
the type of expression is: ((A -> (B -> C)) -> ((A -> B) -> (A -> C)))
F is defined: (@x.(@f.((f:1)((f:1)(x:2)))))
the type of expression is: (A -> ((A -> A) -> A))
type A and type (A -> B) can't be unified!
OMEGA is defined: (@x.((x:1)(x:1)))
the type of expression is: NULL
TRUE is defined: (@x.(@y.(x:2)))
the type of expression is: (A -> (B -> A))
FALSE is defined: (@x.(@y.(y:1)))
the type of expression is: (A -> (B -> B))
IF is defined: (@a.(@b.(@c.(((a:3)(b:2))(c:1)))))
the type of expression is: ((A -> (B -> C)) -> (A -> (B -> C)))
OR is defined: (@a.(@b.((((IF:3)(a:2))(TRUE:5))(b:1))))
the type of expression is: (((A -> (B -> A)) -> (C -> D)) -> (C -> D))
AND is defined: (@a.(@b.((((IF:4)(a:2))(b:1))(FALSE:5))))
the type of expression is: ((A -> ((B -> (C -> C)) -> D)) -> (A -> D))
NOT is defined: (@a.((((IF:4)(a:1))(FALSE:5))(TRUE:6)))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> C)) -> E)) -> E)
PAIR is defined: (@a.(@b.(@x.((((IF:7)(x:1))(a:3))(b:2)))))
the type of expression is: (A -> (B -> ((A -> (B -> C)) -> C)))
FST is defined: (@a.((a:1)(TRUE:8)))
the type of expression is: (((A -> (B -> A)) -> C) -> C)
SND is defined: (@a.((a:1)(FALSE:8)))
the type of expression is: (((A -> (B -> B)) -> C) -> C)
CONS is defined: (PAIR:3)
the type of expression is: (A -> (B -> ((A -> (B -> C)) -> C)))
HEAD is defined: (FST:3)
the type of expression is: (((A -> (B -> A)) -> C) -> C)
TAIL is defined: (SND:3)
the type of expression is: (((A -> (B -> B)) -> C) -> C)
NIL is defined: (@x.(TRUE:13))
the type of expression is: (A -> (B -> (C -> B)))
NULL is defined: (@a.((a:1)(@x.(@y.(FALSE:15)))))
the type of expression is: (((A -> (B -> (C -> (D -> D)))) -> E) -> E)
PNIL is defined: (@z.(z:1))
the type of expression is: (A -> A)
PCONS is defined: (@x.(@y.(((PAIR:11)(FALSE:16))(((PAIR:11)(x:2))(x:2)))))
the type of expression is: (A -> (B -> (((C -> (D -> D)) -> (((A -> (A -> E)) -> E) -> F)) -> F)))
PNULL is defined: (FST:9)
the type of expression is: (((A -> (B -> A)) -> C) -> C)
PHD is defined: (@z.((FST:11)((SND:10)(z:1))))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> C)) -> E)) -> E)
PTL is defined: (@z.((SND:11)((SND:11)(z:1))))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> D)) -> E)) -> E)
ZERO is defined: (@f.(@x.(x:1)))
the type of expression is: (A -> (B -> B))
SUCC is defined: (@n.(@f.(@x.((f:2)(((n:3)(f:2))(x:1))))))
the type of expression is: (((A -> B) -> (C -> A)) -> ((A -> B) -> (C -> B)))
ONE is defined: ((SUCC:1)(ZERO:2))
the type of expression is: ((A -> B) -> (A -> B))
TWO is defined: ((SUCC:2)(ONE:1))
the type of expression is: ((A -> A) -> (A -> A))
THREE is defined: ((SUCC:3)(TWO:1))
the type of expression is: ((A -> A) -> (A -> A))
FOUR is defined: ((SUCC:4)(THREE:1))
the type of expression is: ((A -> A) -> (A -> A))
FIVE is defined: ((SUCC:5)(FOUR:1))
the type of expression is: ((A -> A) -> (A -> A))
PRED is defined: (@n.(@f.(@x.((SND:21)(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1)))))))
the type of expression is: (((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J)))
ISZERO is defined: (@n.(((n:1)(@x.(FALSE:28)))(TRUE:28)))
the type of expression is: (((A -> (B -> (C -> C))) -> ((D -> (E -> D)) -> F)) -> F)
ADD is defined: (@a.(@b.(((a:2)(SUCC:10))(b:1))))
the type of expression is: (((((A -> B) -> (C -> A)) -> ((A -> B) -> (C -> B))) -> (D -> E)) -> (D -> E))
SUB is defined: (@a.(@b.(((b:1)(PRED:5))(a:2))))
the type of expression is: (A -> (((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (A -> L)) -> L))
MULT is defined: (@a.(@b.(((a:2)((ADD:4)(b:1)))(ZERO:13))))
the type of expression is: (((A -> B) -> ((C -> (D -> D)) -> E)) -> (((((F -> G) -> (H -> F)) -> ((F -> G) -> (H -> G))) -> (A -> B)) -> E))
GE is defined: (@a.(@b.((ISZERO:6)(((a:2)(PRED:7))(b:1)))))
the type of expression is: (((((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J))) -> (K -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> Q)))) -> (K -> Q))
LE is defined: (@a.(@b.(((GE:3)(b:1))(a:2))))
the type of expression is: (A -> (((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (A -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> Q)))) -> Q))
type A and type ((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (((((((L -> (M -> L)) -> N) -> ((O -> (N -> P)) -> P)) -> (((Q -> (Q -> R)) -> R) -> ((S -> (T -> T)) -> U))) -> ((N -> O) -> (Q -> U))) -> (A -> ((V -> (W -> (X -> X))) -> ((Y -> (Z -> Y)) -> (A1 -> ((B1 -> (C1 -> C1)) -> D1)))))) -> ((E1 -> (F1 -> (G1 -> G1))) -> ((H1 -> (I1 -> H1)) -> J1)))) can't be unified!
EQ is defined: (@a.(@b.(((AND:31)(((GE:4)(a:2))(b:1)))(((LE:3)(a:2))(b:1)))))
the type of expression is: NULL
GT is defined: (@a.(@b.((NOT:31)(((LE:4)(a:2))(b:1)))))
the type of expression is: (A -> (((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (A -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> ((Q -> (R -> R)) -> ((S -> (T -> S)) -> U)))))) -> U))
LT is defined: (@a.(@b.((NOT:32)(((GE:6)(a:2))(b:1)))))
the type of expression is: (((((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J))) -> (K -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> ((Q -> (R -> R)) -> ((S -> (T -> S)) -> U)))))) -> (K -> U))
NE is defined: (@a.(@b.((NOT:33)(((EQ:5)(a:2))(b:1)))))
the type of expression is: NULL
XADD is defined: (@a.(@b.(@f.(@x.(((a:4)(f:2))(((b:3)(f:2))(x:1)))))))
the type of expression is: ((A -> (B -> C)) -> ((A -> (D -> B)) -> (A -> (D -> C))))
XMULT is defined: (@a.(@b.(@f.(@x.(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1))))))
the type of expression is: (((A -> B) -> (C -> D)) -> ((E -> (A -> B)) -> (E -> (C -> D))))
PZERO is defined: (((PAIR:33)(ZERO:20))(ZERO:20))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> D)) -> E)) -> E)
PSUCC is defined: (@p.(((PAIR:35)((SND:33)(p:1)))((SUCC:21)((SND:33)(p:1)))))
the type of expression is: (((A -> (B -> B)) -> ((C -> D) -> (E -> C))) -> ((((C -> D) -> (E -> C)) -> (((C -> D) -> (E -> D)) -> F)) -> F))
PREX is defined: (@n.((FST:35)(((n:1)(PSUCC:2))(PZERO:3))))
the type of expression is: (((((A -> (B -> B)) -> ((C -> D) -> (E -> C))) -> ((((C -> D) -> (E -> C)) -> (((C -> D) -> (E -> D)) -> F)) -> F)) -> ((((G -> (H -> H)) -> ((I -> (J -> J)) -> K)) -> K) -> ((L -> (M -> L)) -> N))) -> N)
PREFN is defined: (@f.(@p.(((PAIR:38)((f:2)((FST:37)(p:1))))((FST:37)(p:1)))))
the type of expression is: ((A -> B) -> (((C -> (D -> C)) -> A) -> ((B -> (A -> E)) -> E)))
PRE is defined: (@n.(@f.(@x.((SND:38)(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1)))))))
the type of expression is: (((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J)))
type A and type (A -> B) can't be unified!
REC is defined: (@h.((@x.((h:2)((x:1)(x:1))))(@x.((h:2)((x:1)(x:1))))))
the type of expression is: NULL
type A and type (A -> B) can't be unified!
Y is defined: (@f.((@x.((f:2)((x:1)(x:1))))(@x.((f:2)((x:1)(x:1))))))
the type of expression is: NULL
type A and type (A -> B) can't be unified!
Z is defined: (@f.((@x.((f:2)(@y.(((x:2)(x:2))(y:1)))))(@x.((f:2)(@y.(((x:2)(x:2))(y:1)))))))
the type of expression is: NULL
type A and type ((B -> (B -> A)) -> (B -> (B -> A))) can't be unified!
FACTA is defined: ((Z:1)(@f.(@n.((((IF:47)((ISZERO:22)(n:1)))(ONE:28))(((MULT:19)(n:1))((f:2)((PRED:23)(n:1))))))))
the type of expression is: NULL
type A and type ((A -> B) -> B) can't be unified!
SUM is defined: ((Z:2)(@f.(@n.((((IF:48)((ISZERO:23)(n:1)))(ZERO:31))(((ADD:22)(n:1))((f:2)((PRED:24)(n:1))))))))
the type of expression is: NULL
type A and type ((B -> (B -> A)) -> (B -> (B -> A))) can't be unified!
FACT is defined: ((Z:3)(@f.(@n.((((IF:49)((ISZERO:24)(n:1)))(ONE:30))(((MULT:21)(n:1))((f:2)((PRED:25)(n:1))))))))
the type of expression is: NULL
type A and type ((B -> (C -> C)) -> (A -> D)) can't be unified!
PSUM is defined: ((FST:43)((Z:4)(@f.(((PAIR:45)(@n.((((IF:50)((ISZERO:25)(n:1)))(ZERO:33))(((ADD:24)(n:1))(((SND:44)(f:2))(n:1))))))(@n.(((FST:45)(f:2))((PRED:26)(n:1))))))))
the type of expression is: NULL
type A and type (B -> (C -> (C -> A))) can't be unified!
GETN is defined: ((Z:5)(@f.(@n.(@l.((((IF:52)((NULL:41)(l:1)))(FALSE:53))((((IF:52)((ISZERO:27)(n:2)))((HEAD:44)(l:1)))(((f:3)((PRED:28)(n:2)))((TAIL:43)(l:1)))))))))
the type of expression is: NULL
fact is defined: ((Z:6)(@f.(@n.if(((=:61)(n:1))0)then1else(((*:63)(n:1))((f:2)(((-:64)(n:1))1))))))
the type of expression is: (int -> int)
type A and type ((((B -> C) -> (D -> B)) -> ((B -> C) -> (D -> C))) -> (A -> E)) can't be unified!
FIBOGEN is defined: ((Z:7)(@l.(@a.(@b.(((CONS:47)(a:2))(((l:3)(b:1))(((ADD:28)(a:2))(b:1))))))))
the type of expression is: NULL
FIBO is defined: (@x.(((FIBOGEN:2)(ZERO:36))(ONE:34)))
the type of expression is: NULL
SGB is defined: (@x.((((IF:54)((ISZERO:29)(x:1)))(ONE:35))(ZERO:37)))
the type of expression is: (((A -> (B -> (C -> C))) -> ((D -> (E -> D)) -> (((F -> G) -> (F -> G)) -> ((H -> (I -> I)) -> J)))) -> J)
type A and type (B -> (C -> (C -> A))) can't be unified!
ISPAIR is defined: ((Z:10)(@f.(@x.((((IF:56)((ISZERO:31)(x:1)))(ONE:37))((SGB:3)((f:2)((PRED:32)(x:1))))))))
the type of expression is: NULL
type A and type ((((B -> C) -> (D -> B)) -> ((B -> C) -> (D -> C))) -> (A -> A)) can't be unified!
DIV is defined: (@a.(@b.((((Z:13)(@f.(@m.(@c.((((IF:60)(((GT:28)(m:2))(a:5)))(c:1))(((f:3)(((ADD:34)(b:4))(m:2)))((SUCC:42)(c:1))))))))(b:1))(ZERO:40))))
the type of expression is: NULL
type A and type (B -> (C -> (C -> A))) can't be unified!
ISPOWTWO is defined: ((Z:12)(@f.(@x.((((IF:58)((ISZERO:33)(x:1)))(ZERO:41))((((IF:58)((ISZERO:33)((PRED:34)(x:1))))(ONE:39))((((IF:58)((ISZERO:33)((ISPAIR:4)(x:1))))(ZERO:41))((f:2)(((DIV:3)(x:1))(TWO:38)))))))))
the type of expression is: NULL
type A and type (B -> (C -> (C -> A))) can't be unified!
ISPOWTWOA is defined: ((Z:13)(@f.(@x.((((IF:59)((ISZERO:34)(x:1)))(ZERO:42))((((IF:59)((ISZERO:34)((PRED:35)(x:1))))(ONE:40))((((IF:59)((ISZERO:34)((ISPAIR:5)(x:1))))(ZERO:42))((f:2)(((DIV:4)(x:1))(TWO:39)))))))))
the type of expression is: NULL
type A and type ((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> G))) -> ((D -> E) -> (G -> G))) -> (((((((K -> (L -> K)) -> M) -> ((N -> (M -> O)) -> O)) -> (((P -> (P -> Q)) -> Q) -> ((R -> (S -> S)) -> T))) -> ((M -> N) -> (P -> T))) -> (A -> (((((K -> (L -> K)) -> M) -> ((N -> (M -> O)) -> O)) -> (((P -> (P -> Q)) -> Q) -> ((R -> (S -> S)) -> T))) -> ((M -> N) -> (P -> T))))) -> ((U -> (V -> V)) -> (W -> X)))) can't be unified!
DIV is defined: (((Z:14)(@f.(@p.(@m.(@n.((((IF:62)((ISZERO:37)(n:1)))(ZERO:45))((((IF:62)(((LT:29)(m:2))(n:1)))(p:3))((((f:4)((SUCC:44)(p:3)))(((SUB:35)(m:2))(n:1)))(n:1)))))))))(ZERO:41))
the type of expression is: NULL
type A and type ((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> ((Q -> (R -> R)) -> (S -> T)))) -> ((U -> (V -> (W -> W))) -> ((X -> (Y -> X)) -> ((Z -> (A1 -> A1)) -> ((B1 -> (C1 -> B1)) -> (A -> (D1 -> E1)))))))) can't be unified!
MOD is defined: ((Z:15)(@f.(@m.(@n.((((IF:62)((ISZERO:37)(n:1)))(ZERO:45))((((IF:62)(((LT:29)(m:2))(n:1)))(m:2))(((f:3)(((SUB:35)(m:2))(n:1)))(n:1))))))))
the type of expression is: NULL
EXPB is defined: (@z.(@f.(@x.((((z:3)(TWO:43))(f:2))(x:1)))))
the type of expression is: ((((A -> A) -> (A -> A)) -> (B -> (C -> D))) -> (B -> (C -> D)))
ACK is defined: (@m.(((m:1)(@f.(@n.(((n:1)(f:2))((f:2)(@f.(@x.((f:2)(x:1)))))))))(@n.(@f.(@x.(((n:3)(f:2))((f:2)(x:1))))))))
the type of expression is: ((((((A -> B) -> (A -> B)) -> C) -> (((((A -> B) -> (A -> B)) -> C) -> (C -> D)) -> D)) -> ((((E -> F) -> (F -> G)) -> ((E -> F) -> (E -> G))) -> H)) -> H)
please input a lambda term with ";":
typing step 1 and top = 77:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(y:2) |== 1
typing step 2 and top = 76:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1))]
(@x.(y:2)) |== (2 -> 1)
typing step 3 and top = 75:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,(1 -> (2 -> 1)))]
(@y.(@x.(y:2))) |== (1 -> (2 -> 1))
K is defined: (@y.(@x.(y:2)))
the type of expression is: (A -> (B -> A))
please input a lambda term with ";":
typing step 1 and top = 77:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(x:1) |== 1
typing step 2 and top = 76:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,(1 -> 1))]
(@x.(x:1)) |== (1 -> 1)
I is defined: (@x.(x:1))
the type of expression is: (A -> A)
please input a lambda term with ";":
typing step 1 and top = 80:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(x:3) |== 1
typing step 2 and top = 80:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(z:1) |== 3
typing step 3 and top = 80:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(3,4), 5(5,5)]
((x:3)(z:1)) |== 5
typing step 4 and top = 80:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(3,4), 5(5,5)]
(y:2) |== 2
typing step 5 and top = 80:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(3,4), 5(5,5)]
(z:1) |== 3
typing step 6 and top = 80:
abs: [3,(6 -> 7),(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,(6 -> 7)), 3(3,3), 4(3,4), 5(5,5), 6(3,6), 7(7,7)]
((y:2)(z:1)) |== 7
typing step 7 and top = 80:
abs: [3,(6 -> 7),(4 -> (8 -> 9))]
type_env[] = [0(0,int), 1(1,(4 -> (8 -> 9))), 2(2,(6 -> 7)), 3(3,3), 4(3,4), 5(5,(8 -> 9)), 6(3,6), 7(7,7), 8(7,8), 9(9,9)]
(((x:3)(z:1))((y:2)(z:1))) |== 9
typing step 8 and top = 79:
abs: [(6 -> 7),(4 -> (8 -> 9))]
type_env[] = [0(0,int), 1(1,(4 -> (8 -> 9))), 2(2,(6 -> 7)), 3(3,3), 4(3,4), 5(5,(8 -> 9)), 6(3,6), 7(7,7), 8(7,8), 9(9,9), 10(10,(3 -> 9))]
(@z.(((x:3)(z:1))((y:2)(z:1)))) |== (3 -> 9)
typing step 9 and top = 78:
abs: [(4 -> (8 -> 9))]
type_env[] = [0(0,int), 1(1,(4 -> (8 -> 9))), 2(2,(6 -> 7)), 3(3,3), 4(3,4), 5(5,(8 -> 9)), 6(3,6), 7(7,7), 8(7,8), 9(9,9), 10(10,(3 -> 9)), 11(11,((6 -> 7) -> (3 -> 9)))]
(@y.(@z.(((x:3)(z:1))((y:2)(z:1))))) |== ((6 -> 7) -> (3 -> 9))
typing step 10 and top = 77:
abs: []
type_env[] = [0(0,int), 1(1,(4 -> (8 -> 9))), 2(2,(6 -> 7)), 3(3,3), 4(3,4), 5(5,(8 -> 9)), 6(3,6), 7(7,7), 8(7,8), 9(9,9), 10(10,(3 -> 9)), 11(11,((6 -> 7) -> (3 -> 9))), 12(12,((4 -> (8 -> 9)) -> ((6 -> 7) -> (3 -> 9))))]
(@x.(@y.(@z.(((x:3)(z:1))((y:2)(z:1)))))) |== ((4 -> (8 -> 9)) -> ((6 -> 7) -> (3 -> 9)))
S is defined: (@x.(@y.(@z.(((x:3)(z:1))((y:2)(z:1))))))
the type of expression is: ((A -> (B -> C)) -> ((A -> B) -> (A -> C)))
please input a lambda term with ";":
typing step 1 and top = 80:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(f:1) |== 2
typing step 2 and top = 80:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(f:1) |== 2
typing step 3 and top = 80:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:2) |== 1
typing step 4 and top = 80:
abs: [(3 -> 4),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(1,3), 4(4,4)]
((f:1)(x:2)) |== 4
typing step 5 and top = 80:
abs: [(3 -> 4),1]
type_env[] = [0(0,int), 1(4,1), 2(2,(3 -> 4)), 3(1,3), 4(4,4)]
((f:1)((f:1)(x:2))) |== 4
typing step 6 and top = 79:
abs: [1]
type_env[] = [0(0,int), 1(4,1), 2(2,(3 -> 4)), 3(1,3), 4(4,4), 5(5,((3 -> 4) -> 4))]
(@f.((f:1)((f:1)(x:2)))) |== ((3 -> 4) -> 4)
typing step 7 and top = 78:
abs: []
type_env[] = [0(0,int), 1(4,1), 2(2,(3 -> 4)), 3(1,3), 4(4,4), 5(5,((3 -> 4) -> 4)), 6(6,(1 -> ((3 -> 4) -> 4)))]
(@x.(@f.((f:1)((f:1)(x:2))))) |== (1 -> ((3 -> 4) -> 4))
F is defined: (@x.(@f.((f:1)((f:1)(x:2)))))
the type of expression is: (A -> ((A -> A) -> A))
please input a lambda term with ";":
typing step 1 and top = 80:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(x:1) |== 1
typing step 2 and top = 80:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(x:1) |== 1
type A and type (A -> B) can't be unified!
typing step 3 and top = 80:
abs: [(2 -> 3)]
type_env[] = [0(0,int), 1(1,(2 -> 3)), 2(2,2), 3(3,3)]
((x:1)(x:1)) |== NULL
typing step 4 and top = 79:
abs: []
type_env[] = [0(0,int), 1(1,(2 -> 3)), 2(2,2), 3(3,3)]
(@x.((x:1)(x:1))) |== NULL
OMEGA is defined: (@x.((x:1)(x:1)))
the type of expression is: NULL
please input a lambda term with ";":
typing step 1 and top = 82:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:2) |== 1
typing step 2 and top = 81:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1))]
(@y.(x:2)) |== (2 -> 1)
typing step 3 and top = 80:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,(1 -> (2 -> 1)))]
(@x.(@y.(x:2))) |== (1 -> (2 -> 1))
TRUE is defined: (@x.(@y.(x:2)))
the type of expression is: (A -> (B -> A))
please input a lambda term with ";":
typing step 1 and top = 83:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(y:1) |== 2
typing step 2 and top = 82:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 2))]
(@y.(y:1)) |== (2 -> 2)
typing step 3 and top = 81:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 2)), 4(4,(1 -> (2 -> 2)))]
(@x.(@y.(y:1))) |== (1 -> (2 -> 2))
FALSE is defined: (@x.(@y.(y:1)))
the type of expression is: (A -> (B -> B))
please input a lambda term with ";":
typing step 1 and top = 85:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(a:3) |== 1
typing step 2 and top = 85:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(b:2) |== 2
typing step 3 and top = 85:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(2,4), 5(5,5)]
((a:3)(b:2)) |== 5
typing step 4 and top = 85:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(2,4), 5(5,5)]
(c:1) |== 3
typing step 5 and top = 85:
abs: [3,2,(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,2), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7)]
(((a:3)(b:2))(c:1)) |== 7
typing step 6 and top = 84:
abs: [2,(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,2), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(8,(3 -> 7))]
(@c.(((a:3)(b:2))(c:1))) |== (3 -> 7)
typing step 7 and top = 83:
abs: [(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,2), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(8,(3 -> 7)), 9(9,(2 -> (3 -> 7)))]
(@b.(@c.(((a:3)(b:2))(c:1)))) |== (2 -> (3 -> 7))
typing step 8 and top = 82:
abs: []
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,2), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(8,(3 -> 7)), 9(9,(2 -> (3 -> 7))), 10(10,((4 -> (6 -> 7)) -> (2 -> (3 -> 7))))]
(@a.(@b.(@c.(((a:3)(b:2))(c:1))))) |== ((4 -> (6 -> 7)) -> (2 -> (3 -> 7)))
IF is defined: (@a.(@b.(@c.(((a:3)(b:2))(c:1)))))
the type of expression is: ((A -> (B -> C)) -> (A -> (B -> C)))
please input a lambda term with ";":
typing step 1 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
(IF:3) |== ((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))
typing step 2 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
(a:2) |== 1
typing step 3 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
((IF:3)(a:2)) |== (6 -> (4 -> 3))
typing step 4 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(11 -> (12 -> 11)))]
(TRUE:5) |== (11 -> (12 -> 11))
typing step 5 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(11 -> (12 -> 11)))]
(((IF:3)(a:2))(TRUE:5)) |== (4 -> 3)
typing step 6 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(11 -> (12 -> 11)))]
(b:1) |== 2
typing step 7 and top = 85:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(2,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(11 -> (12 -> 11)))]
((((IF:3)(a:2))(TRUE:5))(b:1)) |== 3
typing step 8 and top = 84:
abs: [1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(2,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(11 -> (12 -> 11))), 15(15,(2 -> 3))]
(@b.((((IF:3)(a:2))(TRUE:5))(b:1))) |== (2 -> 3)
typing step 9 and top = 83:
abs: []
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(2,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(11 -> (12 -> 11))), 15(15,(2 -> 3)), 16(16,(1 -> (2 -> 3)))]
(@a.(@b.((((IF:3)(a:2))(TRUE:5))(b:1)))) |== (1 -> (2 -> 3))
OR is defined: (@a.(@b.((((IF:3)(a:2))(TRUE:5))(b:1))))
the type of expression is: (((A -> (B -> A)) -> (C -> D)) -> (C -> D))
please input a lambda term with ";":
typing step 1 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
(IF:4) |== ((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))
typing step 2 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
(a:2) |== 1
typing step 3 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
((IF:4)(a:2)) |== (6 -> (4 -> 3))
typing step 4 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
(b:1) |== 2
typing step 5 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(2,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3))))]
(((IF:4)(a:2))(b:1)) |== (4 -> 3)
typing step 6 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(2,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11)))]
(FALSE:5) |== (13 -> (11 -> 11))
typing step 7 and top = 86:
abs: [2,1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(14,4), 5(5,(4 -> 3)), 6(2,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11)))]
((((IF:4)(a:2))(b:1))(FALSE:5)) |== 3
typing step 8 and top = 85:
abs: [1]
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(14,4), 5(5,(4 -> 3)), 6(2,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,(2 -> 3))]
(@b.((((IF:4)(a:2))(b:1))(FALSE:5))) |== (2 -> 3)
typing step 9 and top = 84:
abs: []
type_env[] = [0(0,int), 1(9,1), 2(2,2), 3(3,3), 4(14,4), 5(5,(4 -> 3)), 6(2,6), 7(7,(6 -> (4 -> 3))), 8(8,(4 -> 3)), 9(9,(6 -> (4 -> 3))), 10(10,((6 -> (4 -> 3)) -> (6 -> (4 -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,(2 -> 3)), 16(16,(1 -> (2 -> 3)))]
(@a.(@b.((((IF:4)(a:2))(b:1))(FALSE:5)))) |== (1 -> (2 -> 3))
AND is defined: (@a.(@b.((((IF:4)(a:2))(b:1))(FALSE:5))))
the type of expression is: ((A -> ((B -> (C -> C)) -> D)) -> (A -> D))
please input a lambda term with ";":
typing step 1 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2))))]
(IF:4) |== ((5 -> (3 -> 2)) -> (5 -> (3 -> 2)))
typing step 2 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2))))]
(a:1) |== 1
typing step 3 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(8,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2))))]
((IF:4)(a:1)) |== (5 -> (3 -> 2))
typing step 4 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(8,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2)))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10)))]
(FALSE:5) |== (12 -> (10 -> 10))
typing step 5 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(8,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(13,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2)))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10)))]
(((IF:4)(a:1))(FALSE:5)) |== (3 -> 2)
typing step 6 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(8,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(13,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2)))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,14), 15(15,15), 16(16,(15 -> 14)), 17(17,(14 -> (15 -> 14)))]
(TRUE:6) |== (14 -> (15 -> 14))
typing step 7 and top = 86:
abs: [1]
type_env[] = [0(0,int), 1(8,1), 2(2,2), 3(17,3), 4(4,(3 -> 2)), 5(13,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2)))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,14), 15(15,15), 16(16,(15 -> 14)), 17(17,(14 -> (15 -> 14)))]
((((IF:4)(a:1))(FALSE:5))(TRUE:6)) |== 2
typing step 8 and top = 85:
abs: []
type_env[] = [0(0,int), 1(8,1), 2(2,2), 3(17,3), 4(4,(3 -> 2)), 5(13,5), 6(6,(5 -> (3 -> 2))), 7(7,(3 -> 2)), 8(8,(5 -> (3 -> 2))), 9(9,((5 -> (3 -> 2)) -> (5 -> (3 -> 2)))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,14), 15(15,15), 16(16,(15 -> 14)), 17(17,(14 -> (15 -> 14))), 18(18,(1 -> 2))]
(@a.((((IF:4)(a:1))(FALSE:5))(TRUE:6))) |== (1 -> 2)
NOT is defined: (@a.((((IF:4)(a:1))(FALSE:5))(TRUE:6)))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> C)) -> E)) -> E)
please input a lambda term with ";":
typing step 1 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
(IF:7) |== ((7 -> (5 -> 4)) -> (7 -> (5 -> 4)))
typing step 2 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
(x:1) |== 3
typing step 3 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
((IF:7)(x:1)) |== (7 -> (5 -> 4))
typing step 4 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
(a:3) |== 1
typing step 5 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(1,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
(((IF:7)(x:1))(a:3)) |== (5 -> 4)
typing step 6 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(1,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
(b:2) |== 2
typing step 7 and top = 89:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(2,5), 6(6,(5 -> 4)), 7(1,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4))))]
((((IF:7)(x:1))(a:3))(b:2)) |== 4
typing step 8 and top = 88:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(2,5), 6(6,(5 -> 4)), 7(1,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4)))), 12(12,(3 -> 4))]
(@x.((((IF:7)(x:1))(a:3))(b:2))) |== (3 -> 4)
typing step 9 and top = 87:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(2,5), 6(6,(5 -> 4)), 7(1,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4)))), 12(12,(3 -> 4)), 13(13,(2 -> (3 -> 4)))]
(@b.(@x.((((IF:7)(x:1))(a:3))(b:2)))) |== (2 -> (3 -> 4))
typing step 10 and top = 86:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(10,3), 4(4,4), 5(2,5), 6(6,(5 -> 4)), 7(1,7), 8(8,(7 -> (5 -> 4))), 9(9,(5 -> 4)), 10(10,(7 -> (5 -> 4))), 11(11,((7 -> (5 -> 4)) -> (7 -> (5 -> 4)))), 12(12,(3 -> 4)), 13(13,(2 -> (3 -> 4))), 14(14,(1 -> (2 -> (3 -> 4))))]
(@a.(@b.(@x.((((IF:7)(x:1))(a:3))(b:2))))) |== (1 -> (2 -> (3 -> 4)))
PAIR is defined: (@a.(@b.(@x.((((IF:7)(x:1))(a:3))(b:2)))))
the type of expression is: (A -> (B -> ((A -> (B -> C)) -> C)))
please input a lambda term with ";":
typing step 1 and top = 88:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(a:1) |== 1
typing step 2 and top = 88:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2)))]
(TRUE:8) |== (2 -> (3 -> 2))
typing step 3 and top = 88:
abs: [(6 -> 7)]
type_env[] = [0(0,int), 1(1,(6 -> 7)), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2))), 6(5,6), 7(7,7)]
((a:1)(TRUE:8)) |== 7
typing step 4 and top = 87:
abs: []
type_env[] = [0(0,int), 1(1,(6 -> 7)), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2))), 6(5,6), 7(7,7), 8(8,((6 -> 7) -> 7))]
(@a.((a:1)(TRUE:8))) |== ((6 -> 7) -> 7)
FST is defined: (@a.((a:1)(TRUE:8)))
the type of expression is: (((A -> (B -> A)) -> C) -> C)
please input a lambda term with ";":
typing step 1 and top = 89:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(a:1) |== 1
typing step 2 and top = 89:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 2)), 4(4,4), 5(5,(4 -> (2 -> 2)))]
(FALSE:8) |== (4 -> (2 -> 2))
typing step 3 and top = 89:
abs: [(6 -> 7)]
type_env[] = [0(0,int), 1(1,(6 -> 7)), 2(2,2), 3(3,(2 -> 2)), 4(4,4), 5(5,(4 -> (2 -> 2))), 6(5,6), 7(7,7)]
((a:1)(FALSE:8)) |== 7
typing step 4 and top = 88:
abs: []
type_env[] = [0(0,int), 1(1,(6 -> 7)), 2(2,2), 3(3,(2 -> 2)), 4(4,4), 5(5,(4 -> (2 -> 2))), 6(5,6), 7(7,7), 8(8,((6 -> 7) -> 7))]
(@a.((a:1)(FALSE:8))) |== ((6 -> 7) -> 7)
SND is defined: (@a.((a:1)(FALSE:8)))
the type of expression is: (((A -> (B -> B)) -> C) -> C)
please input a lambda term with ";":
typing step 1 and top = 89:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> (2 -> 1))), 6(6,((4 -> (2 -> 1)) -> 1)), 7(7,(2 -> ((4 -> (2 -> 1)) -> 1))), 8(8,(4 -> (2 -> ((4 -> (2 -> 1)) -> 1))))]
(PAIR:3) |== (4 -> (2 -> ((4 -> (2 -> 1)) -> 1)))
CONS is defined: (PAIR:3)
the type of expression is: (A -> (B -> ((A -> (B -> C)) -> C)))
please input a lambda term with ";":
typing step 1 and top = 90:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2))), 6(6,((2 -> (3 -> 2)) -> 1)), 7(7,(((2 -> (3 -> 2)) -> 1) -> 1))]
(FST:3) |== (((2 -> (3 -> 2)) -> 1) -> 1)
HEAD is defined: (FST:3)
the type of expression is: (((A -> (B -> A)) -> C) -> C)
please input a lambda term with ";":
typing step 1 and top = 91:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 2)), 4(4,4), 5(5,(4 -> (2 -> 2))), 6(6,((4 -> (2 -> 2)) -> 1)), 7(7,(((4 -> (2 -> 2)) -> 1) -> 1))]
(SND:3) |== (((4 -> (2 -> 2)) -> 1) -> 1)
TAIL is defined: (SND:3)
the type of expression is: (((A -> (B -> B)) -> C) -> C)
please input a lambda term with ";":
typing step 1 and top = 93:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2)))]
(TRUE:13) |== (2 -> (3 -> 2))
typing step 2 and top = 92:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2))), 6(6,(1 -> (2 -> (3 -> 2))))]
(@x.(TRUE:13)) |== (1 -> (2 -> (3 -> 2)))
NIL is defined: (@x.(TRUE:13))
the type of expression is: (A -> (B -> (C -> B)))
please input a lambda term with ";":
typing step 1 and top = 94:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(a:1) |== 1
typing step 2 and top = 96:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 4)), 6(6,6), 7(7,(6 -> (4 -> 4)))]
(FALSE:15) |== (6 -> (4 -> 4))
typing step 3 and top = 95:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 4)), 6(6,6), 7(7,(6 -> (4 -> 4))), 8(8,(3 -> (6 -> (4 -> 4))))]
(@y.(FALSE:15)) |== (3 -> (6 -> (4 -> 4)))
typing step 4 and top = 94:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 4)), 6(6,6), 7(7,(6 -> (4 -> 4))), 8(8,(3 -> (6 -> (4 -> 4)))), 9(9,(2 -> (3 -> (6 -> (4 -> 4)))))]
(@x.(@y.(FALSE:15))) |== (2 -> (3 -> (6 -> (4 -> 4))))
typing step 5 and top = 94:
abs: [(10 -> 11)]
type_env[] = [0(0,int), 1(1,(10 -> 11)), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 4)), 6(6,6), 7(7,(6 -> (4 -> 4))), 8(8,(3 -> (6 -> (4 -> 4)))), 9(9,(2 -> (3 -> (6 -> (4 -> 4))))), 10(9,10), 11(11,11)]
((a:1)(@x.(@y.(FALSE:15)))) |== 11
typing step 6 and top = 93:
abs: []
type_env[] = [0(0,int), 1(1,(10 -> 11)), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 4)), 6(6,6), 7(7,(6 -> (4 -> 4))), 8(8,(3 -> (6 -> (4 -> 4)))), 9(9,(2 -> (3 -> (6 -> (4 -> 4))))), 10(9,10), 11(11,11), 12(12,((10 -> 11) -> 11))]
(@a.((a:1)(@x.(@y.(FALSE:15))))) |== ((10 -> 11) -> 11)
NULL is defined: (@a.((a:1)(@x.(@y.(FALSE:15)))))
the type of expression is: (((A -> (B -> (C -> (D -> D)))) -> E) -> E)
please input a lambda term with ";":
typing step 1 and top = 95:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(z:1) |== 1
typing step 2 and top = 94:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,(1 -> 1))]
(@z.(z:1)) |== (1 -> 1)
PNIL is defined: (@z.(z:1))
the type of expression is: (A -> A)
please input a lambda term with ";":
typing step 1 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3))))]
(PAIR:11) |== (6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))
typing step 2 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11)))]
(FALSE:16) |== (13 -> (11 -> 11))
typing step 3 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11)))]
((PAIR:11)(FALSE:16)) |== (4 -> ((6 -> (4 -> 3)) -> 3))
typing step 4 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(18,18), 19(19,(18 -> (16 -> 15))), 20(20,((18 -> (16 -> 15)) -> 15)), 21(21,(16 -> ((18 -> (16 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((18 -> (16 -> 15)) -> 15))))]
(PAIR:11) |== (18 -> (16 -> ((18 -> (16 -> 15)) -> 15)))
typing step 5 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(18,18), 19(19,(18 -> (16 -> 15))), 20(20,((18 -> (16 -> 15)) -> 15)), 21(21,(16 -> ((18 -> (16 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((18 -> (16 -> 15)) -> 15))))]
(x:2) |== 1
typing step 6 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(1,18), 19(19,(18 -> (16 -> 15))), 20(20,((18 -> (16 -> 15)) -> 15)), 21(21,(16 -> ((18 -> (16 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((18 -> (16 -> 15)) -> 15))))]
((PAIR:11)(x:2)) |== (16 -> ((18 -> (16 -> 15)) -> 15))
typing step 7 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(1,18), 19(19,(18 -> (16 -> 15))), 20(20,((18 -> (16 -> 15)) -> 15)), 21(21,(16 -> ((18 -> (16 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((18 -> (16 -> 15)) -> 15))))]
(x:2) |== 1
typing step 8 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(1,16), 17(17,(16 -> 15)), 18(1,18), 19(19,(18 -> (16 -> 15))), 20(20,((18 -> (16 -> 15)) -> 15)), 21(21,(16 -> ((18 -> (16 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((18 -> (16 -> 15)) -> 15))))]
(((PAIR:11)(x:2))(x:2)) |== ((18 -> (16 -> 15)) -> 15)
typing step 9 and top = 97:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(20,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(1,16), 17(17,(1 -> 15)), 18(1,18), 19(19,(1 -> (1 -> 15))), 20(20,((1 -> (1 -> 15)) -> 15)), 21(21,(16 -> ((1 -> (1 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((1 -> (1 -> 15)) -> 15))))]
(((PAIR:11)(FALSE:16))(((PAIR:11)(x:2))(x:2))) |== ((6 -> (4 -> 3)) -> 3)
typing step 10 and top = 96:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(20,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(1,16), 17(17,(1 -> 15)), 18(1,18), 19(19,(1 -> (1 -> 15))), 20(20,((1 -> (1 -> 15)) -> 15)), 21(21,(16 -> ((1 -> (1 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((1 -> (1 -> 15)) -> 15)))), 23(23,(2 -> ((6 -> (4 -> 3)) -> 3)))]
(@y.(((PAIR:11)(FALSE:16))(((PAIR:11)(x:2))(x:2)))) |== (2 -> ((6 -> (4 -> 3)) -> 3))
typing step 11 and top = 95:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(20,4), 5(5,(4 -> 3)), 6(14,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(1,16), 17(17,(1 -> 15)), 18(1,18), 19(19,(1 -> (1 -> 15))), 20(20,((1 -> (1 -> 15)) -> 15)), 21(21,(16 -> ((1 -> (1 -> 15)) -> 15))), 22(22,(18 -> (16 -> ((1 -> (1 -> 15)) -> 15)))), 23(23,(2 -> ((6 -> (4 -> 3)) -> 3))), 24(24,(1 -> (2 -> ((6 -> (4 -> 3)) -> 3))))]
(@x.(@y.(((PAIR:11)(FALSE:16))(((PAIR:11)(x:2))(x:2))))) |== (1 -> (2 -> ((6 -> (4 -> 3)) -> 3)))
PCONS is defined: (@x.(@y.(((PAIR:11)(FALSE:16))(((PAIR:11)(x:2))(x:2)))))
the type of expression is: (A -> (B -> (((C -> (D -> D)) -> (((A -> (A -> E)) -> E) -> F)) -> F)))
please input a lambda term with ";":
typing step 1 and top = 96:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,(2 -> (3 -> 2))), 6(6,((2 -> (3 -> 2)) -> 1)), 7(7,(((2 -> (3 -> 2)) -> 1) -> 1))]
(FST:9) |== (((2 -> (3 -> 2)) -> 1) -> 1)
PNULL is defined: (FST:9)
the type of expression is: (((A -> (B -> A)) -> C) -> C)
please input a lambda term with ";":
typing step 1 and top = 98:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2))]
(FST:11) |== (((3 -> (4 -> 3)) -> 2) -> 2)
typing step 2 and top = 98:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
(SND:10) |== (((12 -> (10 -> 10)) -> 9) -> 9)
typing step 3 and top = 98:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
(z:1) |== 1
typing step 4 and top = 98:
abs: [1]
type_env[] = [0(0,int), 1(14,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
((SND:10)(z:1)) |== 9
typing step 5 and top = 98:
abs: [1]
type_env[] = [0(0,int), 1(14,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(7,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
((FST:11)((SND:10)(z:1))) |== 2
typing step 6 and top = 97:
abs: []
type_env[] = [0(0,int), 1(14,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(7,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9)), 16(16,(1 -> 2))]
(@z.((FST:11)((SND:10)(z:1)))) |== (1 -> 2)
PHD is defined: (@z.((FST:11)((SND:10)(z:1))))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> C)) -> E)) -> E)
please input a lambda term with ";":
typing step 1 and top = 99:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,((5 -> (3 -> 3)) -> 2)), 8(8,(((5 -> (3 -> 3)) -> 2) -> 2))]
(SND:11) |== (((5 -> (3 -> 3)) -> 2) -> 2)
typing step 2 and top = 99:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,((5 -> (3 -> 3)) -> 2)), 8(8,(((5 -> (3 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
(SND:11) |== (((12 -> (10 -> 10)) -> 9) -> 9)
typing step 3 and top = 99:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,((5 -> (3 -> 3)) -> 2)), 8(8,(((5 -> (3 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
(z:1) |== 1
typing step 4 and top = 99:
abs: [1]
type_env[] = [0(0,int), 1(14,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,((5 -> (3 -> 3)) -> 2)), 8(8,(((5 -> (3 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
((SND:11)(z:1)) |== 9
typing step 5 and top = 99:
abs: [1]
type_env[] = [0(0,int), 1(14,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,((5 -> (3 -> 3)) -> 2)), 8(8,(((5 -> (3 -> 3)) -> 2) -> 2)), 9(7,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9))]
((SND:11)((SND:11)(z:1))) |== 2
typing step 6 and top = 98:
abs: []
type_env[] = [0(0,int), 1(14,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,((5 -> (3 -> 3)) -> 2)), 8(8,(((5 -> (3 -> 3)) -> 2) -> 2)), 9(7,9), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 9)), 15(15,(((12 -> (10 -> 10)) -> 9) -> 9)), 16(16,(1 -> 2))]
(@z.((SND:11)((SND:11)(z:1)))) |== (1 -> 2)
PTL is defined: (@z.((SND:11)((SND:11)(z:1))))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> D)) -> E)) -> E)
please input a lambda term with ";":
typing step 1 and top = 101:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:1) |== 2
typing step 2 and top = 100:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 2))]
(@x.(x:1)) |== (2 -> 2)
typing step 3 and top = 99:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 2)), 4(4,(1 -> (2 -> 2)))]
(@f.(@x.(x:1))) |== (1 -> (2 -> 2))
ZERO is defined: (@f.(@x.(x:1)))
the type of expression is: (A -> (B -> B))
please input a lambda term with ";":
typing step 1 and top = 103:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(f:2) |== 2
typing step 2 and top = 103:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(n:3) |== 1
typing step 3 and top = 103:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3)]
(f:2) |== 2
typing step 4 and top = 103:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(2,4), 5(5,5)]
((n:3)(f:2)) |== 5
typing step 5 and top = 103:
abs: [3,2,(4 -> 5)]
type_env[] = [0(0,int), 1(1,(4 -> 5)), 2(2,2), 3(3,3), 4(2,4), 5(5,5)]
(x:1) |== 3
typing step 6 and top = 103:
abs: [3,2,(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,2), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7)]
(((n:3)(f:2))(x:1)) |== 7
typing step 7 and top = 103:
abs: [3,(8 -> 9),(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,(8 -> 9)), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(7,8), 9(9,9)]
((f:2)(((n:3)(f:2))(x:1))) |== 9
typing step 8 and top = 102:
abs: [(8 -> 9),(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,(8 -> 9)), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(7,8), 9(9,9), 10(10,(3 -> 9))]
(@x.((f:2)(((n:3)(f:2))(x:1)))) |== (3 -> 9)
typing step 9 and top = 101:
abs: [(4 -> (6 -> 7))]
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,(8 -> 9)), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(7,8), 9(9,9), 10(10,(3 -> 9)), 11(11,((8 -> 9) -> (3 -> 9)))]
(@f.(@x.((f:2)(((n:3)(f:2))(x:1))))) |== ((8 -> 9) -> (3 -> 9))
typing step 10 and top = 100:
abs: []
type_env[] = [0(0,int), 1(1,(4 -> (6 -> 7))), 2(2,(8 -> 9)), 3(3,3), 4(2,4), 5(5,(6 -> 7)), 6(3,6), 7(7,7), 8(7,8), 9(9,9), 10(10,(3 -> 9)), 11(11,((8 -> 9) -> (3 -> 9))), 12(12,((4 -> (6 -> 7)) -> ((8 -> 9) -> (3 -> 9))))]
(@n.(@f.(@x.((f:2)(((n:3)(f:2))(x:1)))))) |== ((4 -> (6 -> 7)) -> ((8 -> 9) -> (3 -> 9)))
SUCC is defined: (@n.(@f.(@x.((f:2)(((n:3)(f:2))(x:1))))))
the type of expression is: (((A -> B) -> (C -> A)) -> ((A -> B) -> (C -> B)))
please input a lambda term with ";":
typing step 1 and top = 101:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1))))]
(SUCC:1) |== (((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))
typing step 2 and top = 101:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11)))]
(ZERO:2) |== (13 -> (11 -> 11))
typing step 3 and top = 101:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(11,2), 3(3,(2 -> 1)), 4(11,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(8,13), 14(14,(13 -> (11 -> 11)))]
((SUCC:1)(ZERO:2)) |== ((4 -> 1) -> (2 -> 1))
ONE is defined: ((SUCC:1)(ZERO:2))
the type of expression is: ((A -> B) -> (A -> B))
please input a lambda term with ";":
typing step 1 and top = 102:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1))))]
(SUCC:2) |== (((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))
typing step 2 and top = 102:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,(12 -> 11)), 15(15,((12 -> 11) -> (12 -> 11)))]
(ONE:1) |== ((12 -> 11) -> (12 -> 11))
typing step 3 and top = 102:
abs: []
type_env[] = [0(0,int), 1(11,1), 2(12,2), 3(3,(2 -> 1)), 4(12,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 12)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 12))), 10(10,(((4 -> 1) -> (2 -> 12)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(11,12), 13(13,(12 -> 11)), 14(14,(12 -> 11)), 15(15,((12 -> 11) -> (12 -> 11)))]
((SUCC:2)(ONE:1)) |== ((4 -> 1) -> (2 -> 1))
TWO is defined: ((SUCC:2)(ONE:1))
the type of expression is: ((A -> A) -> (A -> A))
please input a lambda term with ";":
typing step 1 and top = 103:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1))))]
(SUCC:3) |== (((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))
typing step 2 and top = 103:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,(11 -> 11)), 14(14,((11 -> 11) -> (11 -> 11)))]
(TWO:1) |== ((11 -> 11) -> (11 -> 11))
typing step 3 and top = 103:
abs: []
type_env[] = [0(0,int), 1(11,1), 2(11,2), 3(3,(2 -> 1)), 4(11,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 11)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 11))), 10(10,(((4 -> 1) -> (2 -> 11)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,(11 -> 11)), 14(14,((11 -> 11) -> (11 -> 11)))]
((SUCC:3)(TWO:1)) |== ((4 -> 1) -> (2 -> 1))
THREE is defined: ((SUCC:3)(TWO:1))
the type of expression is: ((A -> A) -> (A -> A))
please input a lambda term with ";":
typing step 1 and top = 104:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1))))]
(SUCC:4) |== (((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))
typing step 2 and top = 104:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,(11 -> 11)), 14(14,((11 -> 11) -> (11 -> 11)))]
(THREE:1) |== ((11 -> 11) -> (11 -> 11))
typing step 3 and top = 104:
abs: []
type_env[] = [0(0,int), 1(11,1), 2(11,2), 3(3,(2 -> 1)), 4(11,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 11)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 11))), 10(10,(((4 -> 1) -> (2 -> 11)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,(11 -> 11)), 14(14,((11 -> 11) -> (11 -> 11)))]
((SUCC:4)(THREE:1)) |== ((4 -> 1) -> (2 -> 1))
FOUR is defined: ((SUCC:4)(THREE:1))
the type of expression is: ((A -> A) -> (A -> A))
please input a lambda term with ";":
typing step 1 and top = 105:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1))))]
(SUCC:5) |== (((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))
typing step 2 and top = 105:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 4)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 4))), 10(10,(((4 -> 1) -> (2 -> 4)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,(11 -> 11)), 14(14,((11 -> 11) -> (11 -> 11)))]
(FOUR:1) |== ((11 -> 11) -> (11 -> 11))
typing step 3 and top = 105:
abs: []
type_env[] = [0(0,int), 1(11,1), 2(11,2), 3(3,(2 -> 1)), 4(11,4), 5(5,(4 -> 1)), 6(6,((4 -> 1) -> (2 -> 1))), 7(7,(2 -> 11)), 8(8,(4 -> 1)), 9(9,((4 -> 1) -> (2 -> 11))), 10(10,(((4 -> 1) -> (2 -> 11)) -> ((4 -> 1) -> (2 -> 1)))), 11(11,11), 12(12,(11 -> 11)), 13(13,(11 -> 11)), 14(14,((11 -> 11) -> (11 -> 11)))]
((SUCC:5)(FOUR:1)) |== ((4 -> 1) -> (2 -> 1))
FIVE is defined: ((SUCC:5)(FOUR:1))
the type of expression is: ((A -> A) -> (A -> A))
please input a lambda term with ";":
typing step 1 and top = 109:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4))]
(SND:21) |== (((7 -> (5 -> 5)) -> 4) -> 4)
typing step 2 and top = 109:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4))]
(n:3) |== 1
typing step 3 and top = 110:
abs: [11,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12))))]
(PAIR:24) |== (15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))
typing step 4 and top = 110:
abs: [11,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12))))]
(f:3) |== 2
typing step 5 and top = 110:
abs: [11,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20))]
(FST:23) |== (((21 -> (22 -> 21)) -> 20) -> 20)
typing step 6 and top = 110:
abs: [11,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20))]
(p:1) |== 11
typing step 7 and top = 110:
abs: [11,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20))]
((FST:23)(p:1)) |== 20
typing step 8 and top = 110:
abs: [11,3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28)]
((f:3)((FST:23)(p:1))) |== 28
typing step 9 and top = 110:
abs: [11,3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(28,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28)]
((PAIR:24)((f:3)((FST:23)(p:1)))) |== (13 -> ((15 -> (13 -> 12)) -> 12))
typing step 10 and top = 110:
abs: [11,3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(28,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(29,29), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,(30 -> (31 -> 30))), 34(34,((30 -> (31 -> 30)) -> 29)), 35(35,(((30 -> (31 -> 30)) -> 29) -> 29))]
(FST:23) |== (((30 -> (31 -> 30)) -> 29) -> 29)
typing step 11 and top = 110:
abs: [11,3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(28,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(29,29), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,(30 -> (31 -> 30))), 34(34,((30 -> (31 -> 30)) -> 29)), 35(35,(((30 -> (31 -> 30)) -> 29) -> 29))]
(p:1) |== 11
typing step 12 and top = 110:
abs: [11,3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(28,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29))]
((FST:23)(p:1)) |== 29
typing step 13 and top = 110:
abs: [11,3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(13 -> 12)), 15(28,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29))]
(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1))) |== ((15 -> (13 -> 12)) -> 12)
typing step 14 and top = 109:
abs: [3,(27 -> 28),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(13 -> 12)), 15(28,15), 16(16,(15 -> (13 -> 12))), 17(17,((15 -> (13 -> 12)) -> 12)), 18(18,(13 -> ((15 -> (13 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((15 -> (13 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(11 -> ((15 -> (13 -> 12)) -> 12)))]
(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))) |== (11 -> ((15 -> (13 -> 12)) -> 12))
typing step 15 and top = 109:
abs: [3,(27 -> 28),(37 -> 38)]
type_env[] = [0(0,int), 1(1,(37 -> 38)), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,38)]
((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1))))) |== 38
typing step 16 and top = 109:
abs: [3,(27 -> 28),(37 -> 38)]
type_env[] = [0(0,int), 1(1,(37 -> 38)), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,38), 39(39,39), 40(40,40), 41(41,(40 -> 39)), 42(42,42), 43(43,(42 -> (40 -> 39))), 44(44,((42 -> (40 -> 39)) -> 39)), 45(45,(40 -> ((42 -> (40 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((42 -> (40 -> 39)) -> 39))))]
(PAIR:23) |== (42 -> (40 -> ((42 -> (40 -> 39)) -> 39)))
typing step 17 and top = 109:
abs: [3,(27 -> 28),(37 -> 38)]
type_env[] = [0(0,int), 1(1,(37 -> 38)), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,38), 39(39,39), 40(40,40), 41(41,(40 -> 39)), 42(42,42), 43(43,(42 -> (40 -> 39))), 44(44,((42 -> (40 -> 39)) -> 39)), 45(45,(40 -> ((42 -> (40 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((42 -> (40 -> 39)) -> 39))))]
(x:1) |== 3
typing step 18 and top = 109:
abs: [3,(27 -> 28),(37 -> 38)]
type_env[] = [0(0,int), 1(1,(37 -> 38)), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,38), 39(39,39), 40(40,40), 41(41,(40 -> 39)), 42(3,42), 43(43,(42 -> (40 -> 39))), 44(44,((42 -> (40 -> 39)) -> 39)), 45(45,(40 -> ((42 -> (40 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((42 -> (40 -> 39)) -> 39))))]
((PAIR:23)(x:1)) |== (40 -> ((42 -> (40 -> 39)) -> 39))
typing step 19 and top = 109:
abs: [3,(27 -> 28),(37 -> 38)]
type_env[] = [0(0,int), 1(1,(37 -> 38)), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,38), 39(39,39), 40(40,40), 41(41,(40 -> 39)), 42(3,42), 43(43,(42 -> (40 -> 39))), 44(44,((42 -> (40 -> 39)) -> 39)), 45(45,(40 -> ((42 -> (40 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((42 -> (40 -> 39)) -> 39))))]
(x:1) |== 3
typing step 20 and top = 109:
abs: [3,(27 -> 28),(37 -> 38)]
type_env[] = [0(0,int), 1(1,(37 -> 38)), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,38), 39(39,39), 40(3,40), 41(41,(40 -> 39)), 42(3,42), 43(43,(42 -> (40 -> 39))), 44(44,((42 -> (40 -> 39)) -> 39)), 45(45,(40 -> ((42 -> (40 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((42 -> (40 -> 39)) -> 39))))]
(((PAIR:23)(x:1))(x:1)) |== ((42 -> (40 -> 39)) -> 39)
typing step 21 and top = 109:
abs: [3,(27 -> 28),(37 -> (47 -> 48))]
type_env[] = [0(0,int), 1(1,(37 -> (47 -> 48))), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,(47 -> 48)), 39(39,39), 40(3,40), 41(41,(3 -> 39)), 42(3,42), 43(43,(3 -> (3 -> 39))), 44(44,((3 -> (3 -> 39)) -> 39)), 45(45,(40 -> ((3 -> (3 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((3 -> (3 -> 39)) -> 39)))), 47(44,47), 48(48,48)]
(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1))) |== 48
typing step 22 and top = 109:
abs: [3,(27 -> 28),(37 -> (47 -> 48))]
type_env[] = [0(0,int), 1(1,(37 -> (47 -> 48))), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,(47 -> 48)), 39(39,39), 40(3,40), 41(41,(3 -> 39)), 42(3,42), 43(43,(3 -> (3 -> 39))), 44(44,((3 -> (3 -> 39)) -> 39)), 45(45,(40 -> ((3 -> (3 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((3 -> (3 -> 39)) -> 39)))), 47(44,47), 48(9,48)]
((SND:21)(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1)))) |== 4
typing step 23 and top = 108:
abs: [(27 -> 28),(37 -> (47 -> 48))]
type_env[] = [0(0,int), 1(1,(37 -> (47 -> 48))), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,(47 -> 48)), 39(39,39), 40(3,40), 41(41,(3 -> 39)), 42(3,42), 43(43,(3 -> (3 -> 39))), 44(44,((3 -> (3 -> 39)) -> 39)), 45(45,(40 -> ((3 -> (3 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((3 -> (3 -> 39)) -> 39)))), 47(44,47), 48(9,48), 49(49,(3 -> 4))]
(@x.((SND:21)(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1))))) |== (3 -> 4)
typing step 24 and top = 107:
abs: [(37 -> (47 -> 48))]
type_env[] = [0(0,int), 1(1,(37 -> (47 -> 48))), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,(47 -> 48)), 39(39,39), 40(3,40), 41(41,(3 -> 39)), 42(3,42), 43(43,(3 -> (3 -> 39))), 44(44,((3 -> (3 -> 39)) -> 39)), 45(45,(40 -> ((3 -> (3 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((3 -> (3 -> 39)) -> 39)))), 47(44,47), 48(9,48), 49(49,(3 -> 4)), 50(50,((27 -> 28) -> (3 -> 4)))]
(@f.(@x.((SND:21)(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1)))))) |== ((27 -> 28) -> (3 -> 4))
typing step 25 and top = 106:
abs: []
type_env[] = [0(0,int), 1(1,(37 -> (47 -> 48))), 2(2,(27 -> 28)), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(25,11), 12(12,12), 13(20,13), 14(14,(20 -> 12)), 15(28,15), 16(16,(28 -> (20 -> 12))), 17(17,((28 -> (20 -> 12)) -> 12)), 18(18,(13 -> ((28 -> (20 -> 12)) -> 12))), 19(19,(15 -> (13 -> ((28 -> (20 -> 12)) -> 12)))), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20)), 27(20,27), 28(28,28), 29(20,29), 30(21,30), 31(22,31), 32(32,(31 -> 21)), 33(33,(30 -> (31 -> 21))), 34(34,((30 -> (31 -> 21)) -> 29)), 35(35,(((30 -> (31 -> 21)) -> 29) -> 29)), 36(36,(((21 -> (22 -> 21)) -> 20) -> ((28 -> (20 -> 12)) -> 12))), 37(36,37), 38(38,(47 -> 48)), 39(39,39), 40(3,40), 41(41,(3 -> 39)), 42(3,42), 43(43,(3 -> (3 -> 39))), 44(44,((3 -> (3 -> 39)) -> 39)), 45(45,(40 -> ((3 -> (3 -> 39)) -> 39))), 46(46,(42 -> (40 -> ((3 -> (3 -> 39)) -> 39)))), 47(44,47), 48(9,48), 49(49,(3 -> 4)), 50(50,((27 -> 28) -> (3 -> 4))), 51(51,((37 -> (47 -> 48)) -> ((27 -> 28) -> (3 -> 4))))]
(@n.(@f.(@x.((SND:21)(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1))))))) |== ((37 -> (47 -> 48)) -> ((27 -> 28) -> (3 -> 4)))
PRED is defined: (@n.(@f.(@x.((SND:21)(((n:3)(@p.(((PAIR:24)((f:3)((FST:23)(p:1))))((FST:23)(p:1)))))(((PAIR:23)(x:1))(x:1)))))))
the type of expression is: (((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J)))
please input a lambda term with ";":
typing step 1 and top = 108:
abs: [1]
type_env[] = [0(0,int), 1(1,1)]
(n:1) |== 1
typing step 2 and top = 109:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3)))]
(FALSE:28) |== (5 -> (3 -> 3))
typing step 3 and top = 108:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,(2 -> (5 -> (3 -> 3))))]
(@x.(FALSE:28)) |== (2 -> (5 -> (3 -> 3)))
typing step 4 and top = 108:
abs: [(8 -> 9)]
type_env[] = [0(0,int), 1(1,(8 -> 9)), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,(2 -> (5 -> (3 -> 3)))), 8(7,8), 9(9,9)]
((n:1)(@x.(FALSE:28))) |== 9
typing step 5 and top = 108:
abs: [(8 -> 9)]
type_env[] = [0(0,int), 1(1,(8 -> 9)), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,(2 -> (5 -> (3 -> 3)))), 8(7,8), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,(10 -> (11 -> 10)))]
(TRUE:28) |== (10 -> (11 -> 10))
typing step 6 and top = 108:
abs: [(8 -> (14 -> 15))]
type_env[] = [0(0,int), 1(1,(8 -> (14 -> 15))), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,(2 -> (5 -> (3 -> 3)))), 8(7,8), 9(9,(14 -> 15)), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,(10 -> (11 -> 10))), 14(13,14), 15(15,15)]
(((n:1)(@x.(FALSE:28)))(TRUE:28)) |== 15
typing step 7 and top = 107:
abs: []
type_env[] = [0(0,int), 1(1,(8 -> (14 -> 15))), 2(2,2), 3(3,3), 4(4,(3 -> 3)), 5(5,5), 6(6,(5 -> (3 -> 3))), 7(7,(2 -> (5 -> (3 -> 3)))), 8(7,8), 9(9,(14 -> 15)), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,(10 -> (11 -> 10))), 14(13,14), 15(15,15), 16(16,((8 -> (14 -> 15)) -> 15))]
(@n.(((n:1)(@x.(FALSE:28)))(TRUE:28))) |== ((8 -> (14 -> 15)) -> 15)
ISZERO is defined: (@n.(((n:1)(@x.(FALSE:28)))(TRUE:28)))
the type of expression is: (((A -> (B -> (C -> C))) -> ((D -> (E -> D)) -> F)) -> F)
please input a lambda term with ";":
typing step 1 and top = 110:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(a:2) |== 1
typing step 2 and top = 110:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 3)), 8(8,((6 -> 3) -> (4 -> 3))), 9(9,(4 -> 6)), 10(10,(6 -> 3)), 11(11,((6 -> 3) -> (4 -> 6))), 12(12,(((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3))))]
(SUCC:10) |== (((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3)))
typing step 3 and top = 110:
abs: [2,(13 -> 14)]
type_env[] = [0(0,int), 1(1,(13 -> 14)), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 3)), 8(8,((6 -> 3) -> (4 -> 3))), 9(9,(4 -> 6)), 10(10,(6 -> 3)), 11(11,((6 -> 3) -> (4 -> 6))), 12(12,(((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3)))), 13(12,13), 14(14,14)]
((a:2)(SUCC:10)) |== 14
typing step 4 and top = 110:
abs: [2,(13 -> 14)]
type_env[] = [0(0,int), 1(1,(13 -> 14)), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 3)), 8(8,((6 -> 3) -> (4 -> 3))), 9(9,(4 -> 6)), 10(10,(6 -> 3)), 11(11,((6 -> 3) -> (4 -> 6))), 12(12,(((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3)))), 13(12,13), 14(14,14)]
(b:1) |== 2
typing step 5 and top = 110:
abs: [2,(13 -> (15 -> 16))]
type_env[] = [0(0,int), 1(1,(13 -> (15 -> 16))), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 3)), 8(8,((6 -> 3) -> (4 -> 3))), 9(9,(4 -> 6)), 10(10,(6 -> 3)), 11(11,((6 -> 3) -> (4 -> 6))), 12(12,(((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3)))), 13(12,13), 14(14,(15 -> 16)), 15(2,15), 16(16,16)]
(((a:2)(SUCC:10))(b:1)) |== 16
typing step 6 and top = 109:
abs: [(13 -> (15 -> 16))]
type_env[] = [0(0,int), 1(1,(13 -> (15 -> 16))), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 3)), 8(8,((6 -> 3) -> (4 -> 3))), 9(9,(4 -> 6)), 10(10,(6 -> 3)), 11(11,((6 -> 3) -> (4 -> 6))), 12(12,(((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3)))), 13(12,13), 14(14,(15 -> 16)), 15(2,15), 16(16,16), 17(17,(2 -> 16))]
(@b.(((a:2)(SUCC:10))(b:1))) |== (2 -> 16)
typing step 7 and top = 108:
abs: []
type_env[] = [0(0,int), 1(1,(13 -> (15 -> 16))), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 3)), 8(8,((6 -> 3) -> (4 -> 3))), 9(9,(4 -> 6)), 10(10,(6 -> 3)), 11(11,((6 -> 3) -> (4 -> 6))), 12(12,(((6 -> 3) -> (4 -> 6)) -> ((6 -> 3) -> (4 -> 3)))), 13(12,13), 14(14,(15 -> 16)), 15(2,15), 16(16,16), 17(17,(2 -> 16)), 18(18,((13 -> (15 -> 16)) -> (2 -> 16)))]
(@a.(@b.(((a:2)(SUCC:10))(b:1)))) |== ((13 -> (15 -> 16)) -> (2 -> 16))
ADD is defined: (@a.(@b.(((a:2)(SUCC:10))(b:1))))
the type of expression is: (((((A -> B) -> (C -> A)) -> ((A -> B) -> (C -> B))) -> (D -> E)) -> (D -> E))
please input a lambda term with ";":
typing step 1 and top = 111:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(b:1) |== 2
typing step 2 and top = 111:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,((7 -> 6) -> (4 -> 3))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 3)), 15(15,15), 16(16,(4 -> 15)), 17(17,(4 -> (4 -> 15))), 18(18,((4 -> (4 -> 15)) -> 15)), 19(19,(((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))), 20(20,20), 21(21,(7 -> 20)), 22(22,(6 -> (7 -> 20))), 23(23,((6 -> (7 -> 20)) -> 20)), 24(24,24), 25(25,25), 26(26,(25 -> 24)), 27(27,(24 -> (25 -> 24))), 28(28,((24 -> (25 -> 24)) -> 7)), 29(29,(((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20))), 30(30,((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3)))), 31(31,(((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3))))]
(PRED:5) |== (((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3)))
typing step 3 and top = 111:
abs: [(32 -> 33),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(32 -> 33)), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,((7 -> 6) -> (4 -> 3))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 3)), 15(15,15), 16(16,(4 -> 15)), 17(17,(4 -> (4 -> 15))), 18(18,((4 -> (4 -> 15)) -> 15)), 19(19,(((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))), 20(20,20), 21(21,(7 -> 20)), 22(22,(6 -> (7 -> 20))), 23(23,((6 -> (7 -> 20)) -> 20)), 24(24,24), 25(25,25), 26(26,(25 -> 24)), 27(27,(24 -> (25 -> 24))), 28(28,((24 -> (25 -> 24)) -> 7)), 29(29,(((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20))), 30(30,((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3)))), 31(31,(((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3)))), 32(31,32), 33(33,33)]
((b:1)(PRED:5)) |== 33
typing step 4 and top = 111:
abs: [(32 -> 33),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(32 -> 33)), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,((7 -> 6) -> (4 -> 3))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 3)), 15(15,15), 16(16,(4 -> 15)), 17(17,(4 -> (4 -> 15))), 18(18,((4 -> (4 -> 15)) -> 15)), 19(19,(((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))), 20(20,20), 21(21,(7 -> 20)), 22(22,(6 -> (7 -> 20))), 23(23,((6 -> (7 -> 20)) -> 20)), 24(24,24), 25(25,25), 26(26,(25 -> 24)), 27(27,(24 -> (25 -> 24))), 28(28,((24 -> (25 -> 24)) -> 7)), 29(29,(((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20))), 30(30,((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3)))), 31(31,(((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3)))), 32(31,32), 33(33,33)]
(a:2) |== 1
typing step 5 and top = 111:
abs: [(32 -> (34 -> 35)),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(32 -> (34 -> 35))), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,((7 -> 6) -> (4 -> 3))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 3)), 15(15,15), 16(16,(4 -> 15)), 17(17,(4 -> (4 -> 15))), 18(18,((4 -> (4 -> 15)) -> 15)), 19(19,(((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))), 20(20,20), 21(21,(7 -> 20)), 22(22,(6 -> (7 -> 20))), 23(23,((6 -> (7 -> 20)) -> 20)), 24(24,24), 25(25,25), 26(26,(25 -> 24)), 27(27,(24 -> (25 -> 24))), 28(28,((24 -> (25 -> 24)) -> 7)), 29(29,(((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20))), 30(30,((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3)))), 31(31,(((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3)))), 32(31,32), 33(33,(34 -> 35)), 34(1,34), 35(35,35)]
(((b:1)(PRED:5))(a:2)) |== 35
typing step 6 and top = 110:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,(32 -> (34 -> 35))), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,((7 -> 6) -> (4 -> 3))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 3)), 15(15,15), 16(16,(4 -> 15)), 17(17,(4 -> (4 -> 15))), 18(18,((4 -> (4 -> 15)) -> 15)), 19(19,(((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))), 20(20,20), 21(21,(7 -> 20)), 22(22,(6 -> (7 -> 20))), 23(23,((6 -> (7 -> 20)) -> 20)), 24(24,24), 25(25,25), 26(26,(25 -> 24)), 27(27,(24 -> (25 -> 24))), 28(28,((24 -> (25 -> 24)) -> 7)), 29(29,(((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20))), 30(30,((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3)))), 31(31,(((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3)))), 32(31,32), 33(33,(34 -> 35)), 34(1,34), 35(35,35), 36(36,((32 -> (34 -> 35)) -> 35))]
(@b.(((b:1)(PRED:5))(a:2))) |== ((32 -> (34 -> 35)) -> 35)
typing step 7 and top = 109:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,(32 -> (34 -> 35))), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,((7 -> 6) -> (4 -> 3))), 10(10,10), 11(11,(10 -> 10)), 12(12,12), 13(13,(12 -> (10 -> 10))), 14(14,((12 -> (10 -> 10)) -> 3)), 15(15,15), 16(16,(4 -> 15)), 17(17,(4 -> (4 -> 15))), 18(18,((4 -> (4 -> 15)) -> 15)), 19(19,(((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))), 20(20,20), 21(21,(7 -> 20)), 22(22,(6 -> (7 -> 20))), 23(23,((6 -> (7 -> 20)) -> 20)), 24(24,24), 25(25,25), 26(26,(25 -> 24)), 27(27,(24 -> (25 -> 24))), 28(28,((24 -> (25 -> 24)) -> 7)), 29(29,(((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20))), 30(30,((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3)))), 31(31,(((((24 -> (25 -> 24)) -> 7) -> ((6 -> (7 -> 20)) -> 20)) -> (((4 -> (4 -> 15)) -> 15) -> ((12 -> (10 -> 10)) -> 3))) -> ((7 -> 6) -> (4 -> 3)))), 32(31,32), 33(33,(34 -> 35)), 34(1,34), 35(35,35), 36(36,((32 -> (34 -> 35)) -> 35)), 37(37,(1 -> ((32 -> (34 -> 35)) -> 35)))]
(@a.(@b.(((b:1)(PRED:5))(a:2)))) |== (1 -> ((32 -> (34 -> 35)) -> 35))
SUB is defined: (@a.(@b.(((b:1)(PRED:5))(a:2))))
the type of expression is: (A -> (((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (A -> L)) -> L))
please input a lambda term with ";":
typing step 1 and top = 112:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(a:2) |== 1
typing step 2 and top = 112:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3)))]
(ADD:4) |== (((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3))
typing step 3 and top = 112:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3)))]
(b:1) |== 2
typing step 4 and top = 112:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(17,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3)))]
((ADD:4)(b:1)) |== (4 -> 3)
typing step 5 and top = 112:
abs: [2,(19 -> 20)]
type_env[] = [0(0,int), 1(1,(19 -> 20)), 2(17,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3))), 19(5,19), 20(20,20)]
((a:2)((ADD:4)(b:1))) |== 20
typing step 6 and top = 112:
abs: [2,(19 -> 20)]
type_env[] = [0(0,int), 1(1,(19 -> 20)), 2(17,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3))), 19(5,19), 20(20,20), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21)))]
(ZERO:13) |== (23 -> (21 -> 21))
typing step 7 and top = 112:
abs: [2,(19 -> (25 -> 26))]
type_env[] = [0(0,int), 1(1,(19 -> (25 -> 26))), 2(17,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3))), 19(5,19), 20(20,(25 -> 26)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(24,25), 26(26,26)]
(((a:2)((ADD:4)(b:1)))(ZERO:13)) |== 26
typing step 8 and top = 111:
abs: [(19 -> (25 -> 26))]
type_env[] = [0(0,int), 1(1,(19 -> (25 -> 26))), 2(17,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3))), 19(5,19), 20(20,(25 -> 26)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(24,25), 26(26,26), 27(27,(2 -> 26))]
(@b.(((a:2)((ADD:4)(b:1)))(ZERO:13))) |== (2 -> 26)
typing step 9 and top = 110:
abs: []
type_env[] = [0(0,int), 1(1,(19 -> (25 -> 26))), 2(17,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(4 -> 3)), 7(7,7), 8(8,8), 9(9,(8 -> 7)), 10(10,10), 11(11,(10 -> 7)), 12(12,((10 -> 7) -> (8 -> 7))), 13(13,(8 -> 10)), 14(14,(10 -> 7)), 15(15,((10 -> 7) -> (8 -> 10))), 16(16,(((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7)))), 17(17,((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3))), 18(18,(((((10 -> 7) -> (8 -> 10)) -> ((10 -> 7) -> (8 -> 7))) -> (4 -> 3)) -> (4 -> 3))), 19(5,19), 20(20,(25 -> 26)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(24,25), 26(26,26), 27(27,(2 -> 26)), 28(28,((19 -> (25 -> 26)) -> (2 -> 26)))]
(@a.(@b.(((a:2)((ADD:4)(b:1)))(ZERO:13)))) |== ((19 -> (25 -> 26)) -> (2 -> 26))
MULT is defined: (@a.(@b.(((a:2)((ADD:4)(b:1)))(ZERO:13))))
the type of expression is: (((A -> B) -> ((C -> (D -> D)) -> E)) -> (((((F -> G) -> (H -> F)) -> ((F -> G) -> (H -> G))) -> (A -> B)) -> E))
please input a lambda term with ";":
typing step 1 and top = 113:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(ISZERO:6) |== (((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)
typing step 2 and top = 113:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(a:2) |== 1
typing step 3 and top = 113:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17))))]
(PRED:7) |== (((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))
typing step 4 and top = 113:
abs: [2,(46 -> 47)]
type_env[] = [0(0,int), 1(1,(46 -> 47)), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))), 46(45,46), 47(47,47)]
((a:2)(PRED:7)) |== 47
typing step 5 and top = 113:
abs: [2,(46 -> 47)]
type_env[] = [0(0,int), 1(1,(46 -> 47)), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))), 46(45,46), 47(47,47)]
(b:1) |== 2
typing step 6 and top = 113:
abs: [2,(46 -> (48 -> 49))]
type_env[] = [0(0,int), 1(1,(46 -> (48 -> 49))), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))), 46(45,46), 47(47,(48 -> 49)), 48(2,48), 49(49,49)]
(((a:2)(PRED:7))(b:1)) |== 49
typing step 7 and top = 113:
abs: [2,(46 -> (48 -> 49))]
type_env[] = [0(0,int), 1(1,(46 -> (48 -> 49))), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))), 46(45,46), 47(47,(48 -> 49)), 48(2,48), 49(15,49)]
((ISZERO:6)(((a:2)(PRED:7))(b:1))) |== 3
typing step 8 and top = 112:
abs: [(46 -> (48 -> 49))]
type_env[] = [0(0,int), 1(1,(46 -> (48 -> 49))), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))), 46(45,46), 47(47,(48 -> 49)), 48(2,48), 49(15,49), 50(50,(2 -> 3))]
(@b.((ISZERO:6)(((a:2)(PRED:7))(b:1)))) |== (2 -> 3)
typing step 9 and top = 111:
abs: []
type_env[] = [0(0,int), 1(1,(46 -> (48 -> 49))), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> (11 -> (9 -> 9)))), 15(15,((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3))), 16(16,(((13 -> (11 -> (9 -> 9))) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,21), 22(22,(21 -> 20)), 23(23,((21 -> 20) -> (18 -> 17))), 24(24,24), 25(25,(24 -> 24)), 26(26,26), 27(27,(26 -> (24 -> 24))), 28(28,((26 -> (24 -> 24)) -> 17)), 29(29,29), 30(30,(18 -> 29)), 31(31,(18 -> (18 -> 29))), 32(32,((18 -> (18 -> 29)) -> 29)), 33(33,(((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))), 34(34,34), 35(35,(21 -> 34)), 36(36,(20 -> (21 -> 34))), 37(37,((20 -> (21 -> 34)) -> 34)), 38(38,38), 39(39,39), 40(40,(39 -> 38)), 41(41,(38 -> (39 -> 38))), 42(42,((38 -> (39 -> 38)) -> 21)), 43(43,(((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34))), 44(44,((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17)))), 45(45,(((((38 -> (39 -> 38)) -> 21) -> ((20 -> (21 -> 34)) -> 34)) -> (((18 -> (18 -> 29)) -> 29) -> ((26 -> (24 -> 24)) -> 17))) -> ((21 -> 20) -> (18 -> 17)))), 46(45,46), 47(47,(48 -> 49)), 48(2,48), 49(15,49), 50(50,(2 -> 3)), 51(51,((46 -> (48 -> 49)) -> (2 -> 3)))]
(@a.(@b.((ISZERO:6)(((a:2)(PRED:7))(b:1))))) |== ((46 -> (48 -> 49)) -> (2 -> 3))
GE is defined: (@a.(@b.((ISZERO:6)(((a:2)(PRED:7))(b:1)))))
the type of expression is: (((((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J))) -> (K -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> Q)))) -> (K -> Q))
please input a lambda term with ";":
typing step 1 and top = 114:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3)))]
(GE:3) |== (((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3))
typing step 2 and top = 114:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3)))]
(b:1) |== 2
typing step 3 and top = 114:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(48,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3)))]
((GE:3)(b:1)) |== (4 -> 3)
typing step 4 and top = 114:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(48,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3)))]
(a:2) |== 1
typing step 5 and top = 114:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(48,2), 3(3,3), 4(1,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3)))]
(((GE:3)(b:1))(a:2)) |== 3
typing step 6 and top = 113:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(48,2), 3(3,3), 4(1,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3))), 50(50,(2 -> 3))]
(@b.(((GE:3)(b:1))(a:2))) |== (2 -> 3)
typing step 7 and top = 112:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(48,2), 3(3,3), 4(1,4), 5(5,(4 -> 3)), 6(6,6), 7(7,7), 8(8,(7 -> 6)), 9(9,(6 -> (7 -> 6))), 10(10,((6 -> (7 -> 6)) -> 3)), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,15), 16(16,(15 -> (13 -> (11 -> 11)))), 17(17,((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))), 18(18,(4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))), 19(19,19), 20(20,20), 21(21,(20 -> 19)), 22(22,22), 23(23,23), 24(24,(23 -> 22)), 25(25,((23 -> 22) -> (20 -> 19))), 26(26,26), 27(27,(26 -> 26)), 28(28,28), 29(29,(28 -> (26 -> 26))), 30(30,((28 -> (26 -> 26)) -> 19)), 31(31,31), 32(32,(20 -> 31)), 33(33,(20 -> (20 -> 31))), 34(34,((20 -> (20 -> 31)) -> 31)), 35(35,(((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))), 36(36,36), 37(37,(23 -> 36)), 38(38,(22 -> (23 -> 36))), 39(39,((22 -> (23 -> 36)) -> 36)), 40(40,40), 41(41,41), 42(42,(41 -> 40)), 43(43,(40 -> (41 -> 40))), 44(44,((40 -> (41 -> 40)) -> 23)), 45(45,(((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36))), 46(46,((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19)))), 47(47,(((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19)))), 48(48,((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3))))), 49(49,(((((((40 -> (41 -> 40)) -> 23) -> ((22 -> (23 -> 36)) -> 36)) -> (((20 -> (20 -> 31)) -> 31) -> ((28 -> (26 -> 26)) -> 19))) -> ((23 -> 22) -> (20 -> 19))) -> (4 -> ((15 -> (13 -> (11 -> 11))) -> ((6 -> (7 -> 6)) -> 3)))) -> (4 -> 3))), 50(50,(2 -> 3)), 51(51,(1 -> (2 -> 3)))]
(@a.(@b.(((GE:3)(b:1))(a:2)))) |== (1 -> (2 -> 3))
LE is defined: (@a.(@b.(((GE:3)(b:1))(a:2))))
the type of expression is: (A -> (((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (A -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> Q)))) -> Q))
please input a lambda term with ";":
typing step 1 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3)))]
(AND:31) |== ((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))
typing step 2 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(13,13), 14(14,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13)))]
(GE:4) |== (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))
typing step 3 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(13,13), 14(14,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13)))]
(a:2) |== 1
typing step 4 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(13,13), 14(14,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13)))]
((GE:4)(a:2)) |== (14 -> 13)
typing step 5 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(13,13), 14(14,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13)))]
(b:1) |== 2
typing step 6 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(13,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13)))]
(((GE:4)(a:2))(b:1)) |== 13
typing step 7 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13)))]
((AND:31)(((GE:4)(a:2))(b:1))) |== (4 -> 3)
typing step 8 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(73,73), 74(74,(73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(LE:3) |== (73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60))
typing step 9 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(73,73), 74(74,(73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(a:2) |== 1
typing step 10 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(58,73), 74(74,(73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
((LE:3)(a:2)) |== (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)
typing step 11 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(58,73), 74(74,(73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (73 -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(b:1) |== 2
type A and type ((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (((((((L -> (M -> L)) -> N) -> ((O -> (N -> P)) -> P)) -> (((Q -> (Q -> R)) -> R) -> ((S -> (T -> T)) -> U))) -> ((N -> O) -> (Q -> U))) -> (A -> ((V -> (W -> (X -> X))) -> ((Y -> (Z -> Y)) -> (A1 -> ((B1 -> (C1 -> C1)) -> D1)))))) -> ((E1 -> (F1 -> (G1 -> G1))) -> ((H1 -> (I1 -> H1)) -> J1)))) can't be unified!
typing step 12 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(58,73), 74(74,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(((LE:3)(a:2))(b:1)) |== NULL
typing step 13 and top = 115:
abs: [2,1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(58,73), 74(74,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(((AND:31)(((GE:4)(a:2))(b:1)))(((LE:3)(a:2))(b:1))) |== NULL
typing step 14 and top = 114:
abs: [1]
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(58,73), 74(74,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(@b.(((AND:31)(((GE:4)(a:2))(b:1)))(((LE:3)(a:2))(b:1)))) |== NULL
typing step 15 and top = 113:
abs: []
type_env[] = [0(0,int), 1(58,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> 6)), 8(8,8), 9(9,(8 -> (6 -> 6))), 10(10,((8 -> (6 -> 6)) -> 3)), 11(11,(4 -> ((8 -> (6 -> 6)) -> 3))), 12(12,((4 -> ((8 -> (6 -> 6)) -> 3)) -> (4 -> 3))), 13(11,13), 14(2,14), 15(15,(14 -> 13)), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 13)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))), 28(28,(14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))), 29(29,29), 30(30,30), 31(31,(30 -> 29)), 32(32,32), 33(33,33), 34(34,(33 -> 32)), 35(35,((33 -> 32) -> (30 -> 29))), 36(36,36), 37(37,(36 -> 36)), 38(38,38), 39(39,(38 -> (36 -> 36))), 40(40,((38 -> (36 -> 36)) -> 29)), 41(41,41), 42(42,(30 -> 41)), 43(43,(30 -> (30 -> 41))), 44(44,((30 -> (30 -> 41)) -> 41)), 45(45,(((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))), 46(46,46), 47(47,(33 -> 46)), 48(48,(32 -> (33 -> 46))), 49(49,((32 -> (33 -> 46)) -> 46)), 50(50,50), 51(51,51), 52(52,(51 -> 50)), 53(53,(50 -> (51 -> 50))), 54(54,((50 -> (51 -> 50)) -> 33)), 55(55,(((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46))), 56(56,((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29)))), 57(57,(((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29)))), 58(58,((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13))))), 59(59,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> (14 -> 13))), 60(60,60), 61(61,61), 62(62,62), 63(63,(62 -> 61)), 64(64,(61 -> (62 -> 61))), 65(65,((61 -> (62 -> 61)) -> 60)), 66(66,66), 67(67,(66 -> 66)), 68(68,68), 69(69,(68 -> (66 -> 66))), 70(70,70), 71(71,(70 -> (68 -> (66 -> 66)))), 72(72,((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))), 73(58,73), 74(74,(((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))), 75(75,75), 76(76,76), 77(77,(76 -> 75)), 78(78,78), 79(79,79), 80(80,(79 -> 78)), 81(81,((79 -> 78) -> (76 -> 75))), 82(82,82), 83(83,(82 -> 82)), 84(84,84), 85(85,(84 -> (82 -> 82))), 86(86,((84 -> (82 -> 82)) -> 75)), 87(87,87), 88(88,(76 -> 87)), 89(89,(76 -> (76 -> 87))), 90(90,((76 -> (76 -> 87)) -> 87)), 91(91,(((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))), 92(92,92), 93(93,(79 -> 92)), 94(94,(78 -> (79 -> 92))), 95(95,((78 -> (79 -> 92)) -> 92)), 96(96,96), 97(97,97), 98(98,(97 -> 96)), 99(99,(96 -> (97 -> 96))), 100(100,((96 -> (97 -> 96)) -> 79)), 101(101,(((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92))), 102(102,((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75)))), 103(103,(((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75)))), 104(104,((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60))))), 105(105,(((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)), 106(106,(73 -> (((((((96 -> (97 -> 96)) -> 79) -> ((78 -> (79 -> 92)) -> 92)) -> (((76 -> (76 -> 87)) -> 87) -> ((84 -> (82 -> 82)) -> 75))) -> ((79 -> 78) -> (76 -> 75))) -> (((((((50 -> (51 -> 50)) -> 33) -> ((32 -> (33 -> 46)) -> 46)) -> (((30 -> (30 -> 41)) -> 41) -> ((38 -> (36 -> 36)) -> 29))) -> ((33 -> 32) -> (30 -> 29))) -> (14 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 13)))) -> ((70 -> (68 -> (66 -> 66))) -> ((61 -> (62 -> 61)) -> 60)))) -> 60)))]
(@a.(@b.(((AND:31)(((GE:4)(a:2))(b:1)))(((LE:3)(a:2))(b:1))))) |== NULL
EQ is defined: (@a.(@b.(((AND:31)(((GE:4)(a:2))(b:1)))(((LE:3)(a:2))(b:1)))))
the type of expression is: NULL
please input a lambda term with ";":
typing step 1 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(NOT:31) |== (((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)
typing step 2 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(28,28), 29(29,(28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)))]
(LE:4) |== (28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15))
typing step 3 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(28,28), 29(29,(28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)))]
(a:2) |== 1
typing step 4 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(1,28), 29(29,(28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)))]
((LE:4)(a:2)) |== (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)
typing step 5 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(1,28), 29(29,(28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (28 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)))]
(b:1) |== 2
typing step 6 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(59,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(1,28), 29(29,(1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)))]
(((LE:4)(a:2))(b:1)) |== 15
typing step 7 and top = 116:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(59,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(13,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(1,28), 29(29,(1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)))]
((NOT:31)(((LE:4)(a:2))(b:1))) |== 3
typing step 8 and top = 115:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(59,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(13,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(1,28), 29(29,(1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15))), 62(62,(2 -> 3))]
(@b.((NOT:31)(((LE:4)(a:2))(b:1)))) |== (2 -> 3)
typing step 9 and top = 114:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(59,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(13,15), 16(16,16), 17(17,17), 18(18,(17 -> 16)), 19(19,(16 -> (17 -> 16))), 20(20,((16 -> (17 -> 16)) -> 15)), 21(21,21), 22(22,(21 -> 21)), 23(23,23), 24(24,(23 -> (21 -> 21))), 25(25,25), 26(26,(25 -> (23 -> (21 -> 21)))), 27(27,((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))), 28(1,28), 29(29,(1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))), 30(30,30), 31(31,31), 32(32,(31 -> 30)), 33(33,33), 34(34,34), 35(35,(34 -> 33)), 36(36,((34 -> 33) -> (31 -> 30))), 37(37,37), 38(38,(37 -> 37)), 39(39,39), 40(40,(39 -> (37 -> 37))), 41(41,((39 -> (37 -> 37)) -> 30)), 42(42,42), 43(43,(31 -> 42)), 44(44,(31 -> (31 -> 42))), 45(45,((31 -> (31 -> 42)) -> 42)), 46(46,(((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))), 47(47,47), 48(48,(34 -> 47)), 49(49,(33 -> (34 -> 47))), 50(50,((33 -> (34 -> 47)) -> 47)), 51(51,51), 52(52,52), 53(53,(52 -> 51)), 54(54,(51 -> (52 -> 51))), 55(55,((51 -> (52 -> 51)) -> 34)), 56(56,(((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47))), 57(57,((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30)))), 58(58,(((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30)))), 59(59,((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15))))), 60(60,(((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15)), 61(61,(28 -> (((((((51 -> (52 -> 51)) -> 34) -> ((33 -> (34 -> 47)) -> 47)) -> (((31 -> (31 -> 42)) -> 42) -> ((39 -> (37 -> 37)) -> 30))) -> ((34 -> 33) -> (31 -> 30))) -> (1 -> ((25 -> (23 -> (21 -> 21))) -> ((16 -> (17 -> 16)) -> 15)))) -> 15))), 62(62,(2 -> 3)), 63(63,(1 -> (2 -> 3)))]
(@a.(@b.((NOT:31)(((LE:4)(a:2))(b:1))))) |== (1 -> (2 -> 3))
GT is defined: (@a.(@b.((NOT:31)(((LE:4)(a:2))(b:1)))))
the type of expression is: (A -> (((((((B -> (C -> B)) -> D) -> ((E -> (D -> F)) -> F)) -> (((G -> (G -> H)) -> H) -> ((I -> (J -> J)) -> K))) -> ((D -> E) -> (G -> K))) -> (A -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> ((Q -> (R -> R)) -> ((S -> (T -> S)) -> U)))))) -> U))
please input a lambda term with ";":
typing step 1 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(NOT:32) |== (((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)
typing step 2 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15)))]
(GE:6) |== (((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15))
typing step 3 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15)))]
(a:2) |== 1
typing step 4 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(60,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15)))]
((GE:6)(a:2)) |== (16 -> 15)
typing step 5 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(60,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(16,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15)))]
(b:1) |== 2
typing step 6 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(60,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(15,15), 16(2,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15)))]
(((GE:6)(a:2))(b:1)) |== 15
typing step 7 and top = 117:
abs: [2,1]
type_env[] = [0(0,int), 1(60,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(13,15), 16(2,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15)))]
((NOT:32)(((GE:6)(a:2))(b:1))) |== 3
typing step 8 and top = 116:
abs: [1]
type_env[] = [0(0,int), 1(60,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(13,15), 16(2,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15))), 62(62,(2 -> 3))]
(@b.((NOT:32)(((GE:6)(a:2))(b:1)))) |== (2 -> 3)
typing step 9 and top = 115:
abs: []
type_env[] = [0(0,int), 1(60,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)), 15(13,15), 16(2,16), 17(17,(16 -> 15)), 18(18,18), 19(19,19), 20(20,(19 -> 18)), 21(21,(18 -> (19 -> 18))), 22(22,((18 -> (19 -> 18)) -> 15)), 23(23,23), 24(24,(23 -> 23)), 25(25,25), 26(26,(25 -> (23 -> 23))), 27(27,27), 28(28,(27 -> (25 -> (23 -> 23)))), 29(29,((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))), 30(30,(16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))), 31(31,31), 32(32,32), 33(33,(32 -> 31)), 34(34,34), 35(35,35), 36(36,(35 -> 34)), 37(37,((35 -> 34) -> (32 -> 31))), 38(38,38), 39(39,(38 -> 38)), 40(40,40), 41(41,(40 -> (38 -> 38))), 42(42,((40 -> (38 -> 38)) -> 31)), 43(43,43), 44(44,(32 -> 43)), 45(45,(32 -> (32 -> 43))), 46(46,((32 -> (32 -> 43)) -> 43)), 47(47,(((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))), 48(48,48), 49(49,(35 -> 48)), 50(50,(34 -> (35 -> 48))), 51(51,((34 -> (35 -> 48)) -> 48)), 52(52,52), 53(53,53), 54(54,(53 -> 52)), 55(55,(52 -> (53 -> 52))), 56(56,((52 -> (53 -> 52)) -> 35)), 57(57,(((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48))), 58(58,((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31)))), 59(59,(((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31)))), 60(60,((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15))))), 61(61,(((((((52 -> (53 -> 52)) -> 35) -> ((34 -> (35 -> 48)) -> 48)) -> (((32 -> (32 -> 43)) -> 43) -> ((40 -> (38 -> 38)) -> 31))) -> ((35 -> 34) -> (32 -> 31))) -> (16 -> ((27 -> (25 -> (23 -> 23))) -> ((18 -> (19 -> 18)) -> 15)))) -> (16 -> 15))), 62(62,(2 -> 3)), 63(63,(1 -> (2 -> 3)))]
(@a.(@b.((NOT:32)(((GE:6)(a:2))(b:1))))) |== (1 -> (2 -> 3))
LT is defined: (@a.(@b.((NOT:32)(((GE:6)(a:2))(b:1)))))
the type of expression is: (((((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J))) -> (K -> ((L -> (M -> (N -> N))) -> ((O -> (P -> O)) -> ((Q -> (R -> R)) -> ((S -> (T -> S)) -> U)))))) -> (K -> U))
please input a lambda term with ";":
typing step 1 and top = 118:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(NOT:33) |== (((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3)
typing step 2 and top = 118:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(EQ:5) |== NULL
typing step 3 and top = 118:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
((EQ:5)(a:2)) |== NULL
typing step 4 and top = 118:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(((EQ:5)(a:2))(b:1)) |== NULL
typing step 5 and top = 118:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
((NOT:33)(((EQ:5)(a:2))(b:1))) |== NULL
typing step 6 and top = 117:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(@b.((NOT:33)(((EQ:5)(a:2))(b:1)))) |== NULL
typing step 7 and top = 116:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 4)), 7(7,(4 -> (5 -> 4))), 8(8,((4 -> (5 -> 4)) -> 3)), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3))), 14(14,(((11 -> (9 -> 9)) -> ((4 -> (5 -> 4)) -> 3)) -> 3))]
(@a.(@b.((NOT:33)(((EQ:5)(a:2))(b:1))))) |== NULL
NE is defined: (@a.(@b.((NOT:33)(((EQ:5)(a:2))(b:1)))))
the type of expression is: NULL
please input a lambda term with ";":
typing step 1 and top = 121:
abs: [4,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4)]
(a:4) |== 1
typing step 2 and top = 121:
abs: [4,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4)]
(f:2) |== 3
typing step 3 and top = 121:
abs: [4,3,2,(5 -> 6)]
type_env[] = [0(0,int), 1(1,(5 -> 6)), 2(2,2), 3(3,3), 4(4,4), 5(3,5), 6(6,6)]
((a:4)(f:2)) |== 6
typing step 4 and top = 121:
abs: [4,3,2,(5 -> 6)]
type_env[] = [0(0,int), 1(1,(5 -> 6)), 2(2,2), 3(3,3), 4(4,4), 5(3,5), 6(6,6)]
(b:3) |== 2
typing step 5 and top = 121:
abs: [4,3,2,(5 -> 6)]
type_env[] = [0(0,int), 1(1,(5 -> 6)), 2(2,2), 3(3,3), 4(4,4), 5(3,5), 6(6,6)]
(f:2) |== 3
typing step 6 and top = 121:
abs: [4,3,(7 -> 8),(5 -> 6)]
type_env[] = [0(0,int), 1(1,(5 -> 6)), 2(2,(7 -> 8)), 3(3,3), 4(4,4), 5(3,5), 6(6,6), 7(3,7), 8(8,8)]
((b:3)(f:2)) |== 8
typing step 7 and top = 121:
abs: [4,3,(7 -> 8),(5 -> 6)]
type_env[] = [0(0,int), 1(1,(5 -> 6)), 2(2,(7 -> 8)), 3(3,3), 4(4,4), 5(3,5), 6(6,6), 7(3,7), 8(8,8)]
(x:1) |== 4
typing step 8 and top = 121:
abs: [4,3,(7 -> (9 -> 10)),(5 -> 6)]
type_env[] = [0(0,int), 1(1,(5 -> 6)), 2(2,(7 -> (9 -> 10))), 3(3,3), 4(4,4), 5(3,5), 6(6,6), 7(3,7), 8(8,(9 -> 10)), 9(4,9), 10(10,10)]
(((b:3)(f:2))(x:1)) |== 10
typing step 9 and top = 121:
abs: [4,3,(7 -> (9 -> 10)),(5 -> (11 -> 12))]
type_env[] = [0(0,int), 1(1,(5 -> (11 -> 12))), 2(2,(7 -> (9 -> 10))), 3(3,3), 4(4,4), 5(3,5), 6(6,(11 -> 12)), 7(3,7), 8(8,(9 -> 10)), 9(4,9), 10(10,10), 11(10,11), 12(12,12)]
(((a:4)(f:2))(((b:3)(f:2))(x:1))) |== 12
typing step 10 and top = 120:
abs: [3,(7 -> (9 -> 10)),(5 -> (11 -> 12))]
type_env[] = [0(0,int), 1(1,(5 -> (11 -> 12))), 2(2,(7 -> (9 -> 10))), 3(3,3), 4(4,4), 5(3,5), 6(6,(11 -> 12)), 7(3,7), 8(8,(9 -> 10)), 9(4,9), 10(10,10), 11(10,11), 12(12,12), 13(13,(4 -> 12))]
(@x.(((a:4)(f:2))(((b:3)(f:2))(x:1)))) |== (4 -> 12)
typing step 11 and top = 119:
abs: [(7 -> (9 -> 10)),(5 -> (11 -> 12))]
type_env[] = [0(0,int), 1(1,(5 -> (11 -> 12))), 2(2,(7 -> (9 -> 10))), 3(3,3), 4(4,4), 5(3,5), 6(6,(11 -> 12)), 7(3,7), 8(8,(9 -> 10)), 9(4,9), 10(10,10), 11(10,11), 12(12,12), 13(13,(4 -> 12)), 14(14,(3 -> (4 -> 12)))]
(@f.(@x.(((a:4)(f:2))(((b:3)(f:2))(x:1))))) |== (3 -> (4 -> 12))
typing step 12 and top = 118:
abs: [(5 -> (11 -> 12))]
type_env[] = [0(0,int), 1(1,(5 -> (11 -> 12))), 2(2,(7 -> (9 -> 10))), 3(3,3), 4(4,4), 5(3,5), 6(6,(11 -> 12)), 7(3,7), 8(8,(9 -> 10)), 9(4,9), 10(10,10), 11(10,11), 12(12,12), 13(13,(4 -> 12)), 14(14,(3 -> (4 -> 12))), 15(15,((7 -> (9 -> 10)) -> (3 -> (4 -> 12))))]
(@b.(@f.(@x.(((a:4)(f:2))(((b:3)(f:2))(x:1)))))) |== ((7 -> (9 -> 10)) -> (3 -> (4 -> 12)))
typing step 13 and top = 117:
abs: []
type_env[] = [0(0,int), 1(1,(5 -> (11 -> 12))), 2(2,(7 -> (9 -> 10))), 3(3,3), 4(4,4), 5(3,5), 6(6,(11 -> 12)), 7(3,7), 8(8,(9 -> 10)), 9(4,9), 10(10,10), 11(10,11), 12(12,12), 13(13,(4 -> 12)), 14(14,(3 -> (4 -> 12))), 15(15,((7 -> (9 -> 10)) -> (3 -> (4 -> 12)))), 16(16,((5 -> (11 -> 12)) -> ((7 -> (9 -> 10)) -> (3 -> (4 -> 12)))))]
(@a.(@b.(@f.(@x.(((a:4)(f:2))(((b:3)(f:2))(x:1))))))) |== ((5 -> (11 -> 12)) -> ((7 -> (9 -> 10)) -> (3 -> (4 -> 12))))
XADD is defined: (@a.(@b.(@f.(@x.(((a:4)(f:2))(((b:3)(f:2))(x:1)))))))
the type of expression is: ((A -> (B -> C)) -> ((A -> (D -> B)) -> (A -> (D -> C))))
please input a lambda term with ";":
typing step 1 and top = 122:
abs: [4,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4)]
(a:4) |== 1
typing step 2 and top = 123:
abs: [5,4,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5)]
(b:4) |== 2
typing step 3 and top = 123:
abs: [5,4,3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5)]
(f:3) |== 3
typing step 4 and top = 123:
abs: [5,4,3,(6 -> 7),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(6 -> 7)), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,7)]
((b:4)(f:3)) |== 7
typing step 5 and top = 123:
abs: [5,4,3,(6 -> 7),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(6 -> 7)), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,7)]
(w:1) |== 5
typing step 6 and top = 123:
abs: [5,4,3,(6 -> (8 -> 9)),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9)]
(((b:4)(f:3))(w:1)) |== 9
typing step 7 and top = 122:
abs: [4,3,(6 -> (8 -> 9)),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9))]
(@w.(((b:4)(f:3))(w:1))) |== (5 -> 9)
typing step 8 and top = 122:
abs: [4,3,(6 -> (8 -> 9)),(11 -> 12)]
type_env[] = [0(0,int), 1(1,(11 -> 12)), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,12)]
((a:4)(@w.(((b:4)(f:3))(w:1)))) |== 12
typing step 9 and top = 122:
abs: [4,3,(6 -> (8 -> 9)),(11 -> 12)]
type_env[] = [0(0,int), 1(1,(11 -> 12)), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,12)]
(x:1) |== 4
typing step 10 and top = 122:
abs: [4,3,(6 -> (8 -> 9)),(11 -> (13 -> 14))]
type_env[] = [0(0,int), 1(1,(11 -> (13 -> 14))), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,(13 -> 14)), 13(4,13), 14(14,14)]
(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1)) |== 14
typing step 11 and top = 121:
abs: [3,(6 -> (8 -> 9)),(11 -> (13 -> 14))]
type_env[] = [0(0,int), 1(1,(11 -> (13 -> 14))), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,(13 -> 14)), 13(4,13), 14(14,14), 15(15,(4 -> 14))]
(@x.(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1))) |== (4 -> 14)
typing step 12 and top = 120:
abs: [(6 -> (8 -> 9)),(11 -> (13 -> 14))]
type_env[] = [0(0,int), 1(1,(11 -> (13 -> 14))), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,(13 -> 14)), 13(4,13), 14(14,14), 15(15,(4 -> 14)), 16(16,(3 -> (4 -> 14)))]
(@f.(@x.(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1)))) |== (3 -> (4 -> 14))
typing step 13 and top = 119:
abs: [(11 -> (13 -> 14))]
type_env[] = [0(0,int), 1(1,(11 -> (13 -> 14))), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,(13 -> 14)), 13(4,13), 14(14,14), 15(15,(4 -> 14)), 16(16,(3 -> (4 -> 14))), 17(17,((6 -> (8 -> 9)) -> (3 -> (4 -> 14))))]
(@b.(@f.(@x.(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1))))) |== ((6 -> (8 -> 9)) -> (3 -> (4 -> 14)))
typing step 14 and top = 118:
abs: []
type_env[] = [0(0,int), 1(1,(11 -> (13 -> 14))), 2(2,(6 -> (8 -> 9))), 3(3,3), 4(4,4), 5(5,5), 6(3,6), 7(7,(8 -> 9)), 8(5,8), 9(9,9), 10(10,(5 -> 9)), 11(10,11), 12(12,(13 -> 14)), 13(4,13), 14(14,14), 15(15,(4 -> 14)), 16(16,(3 -> (4 -> 14))), 17(17,((6 -> (8 -> 9)) -> (3 -> (4 -> 14)))), 18(18,((11 -> (13 -> 14)) -> ((6 -> (8 -> 9)) -> (3 -> (4 -> 14)))))]
(@a.(@b.(@f.(@x.(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1)))))) |== ((11 -> (13 -> 14)) -> ((6 -> (8 -> 9)) -> (3 -> (4 -> 14))))
XMULT is defined: (@a.(@b.(@f.(@x.(((a:4)(@w.(((b:4)(f:3))(w:1))))(x:1))))))
the type of expression is: (((A -> B) -> (C -> D)) -> ((E -> (A -> B)) -> (E -> (C -> D))))
please input a lambda term with ";":
typing step 1 and top = 119:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> (2 -> 1))), 6(6,((4 -> (2 -> 1)) -> 1)), 7(7,(2 -> ((4 -> (2 -> 1)) -> 1))), 8(8,(4 -> (2 -> ((4 -> (2 -> 1)) -> 1))))]
(PAIR:33) |== (4 -> (2 -> ((4 -> (2 -> 1)) -> 1)))
typing step 2 and top = 119:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(4,4), 5(5,(4 -> (2 -> 1))), 6(6,((4 -> (2 -> 1)) -> 1)), 7(7,(2 -> ((4 -> (2 -> 1)) -> 1))), 8(8,(4 -> (2 -> ((4 -> (2 -> 1)) -> 1)))), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9)))]
(ZERO:20) |== (11 -> (9 -> 9))
typing step 3 and top = 119:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(12,4), 5(5,(4 -> (2 -> 1))), 6(6,((4 -> (2 -> 1)) -> 1)), 7(7,(2 -> ((4 -> (2 -> 1)) -> 1))), 8(8,(4 -> (2 -> ((4 -> (2 -> 1)) -> 1)))), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9)))]
((PAIR:33)(ZERO:20)) |== (2 -> ((4 -> (2 -> 1)) -> 1))
typing step 4 and top = 119:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,(2 -> 1)), 4(12,4), 5(5,(4 -> (2 -> 1))), 6(6,((4 -> (2 -> 1)) -> 1)), 7(7,(2 -> ((4 -> (2 -> 1)) -> 1))), 8(8,(4 -> (2 -> ((4 -> (2 -> 1)) -> 1)))), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> 13)), 15(15,15), 16(16,(15 -> (13 -> 13)))]
(ZERO:20) |== (15 -> (13 -> 13))
typing step 5 and top = 119:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(16,2), 3(3,(2 -> 1)), 4(12,4), 5(5,(4 -> (2 -> 1))), 6(6,((4 -> (2 -> 1)) -> 1)), 7(7,(2 -> ((4 -> (2 -> 1)) -> 1))), 8(8,(4 -> (2 -> ((4 -> (2 -> 1)) -> 1)))), 9(9,9), 10(10,(9 -> 9)), 11(11,11), 12(12,(11 -> (9 -> 9))), 13(13,13), 14(14,(13 -> 13)), 15(15,15), 16(16,(15 -> (13 -> 13)))]
(((PAIR:33)(ZERO:20))(ZERO:20)) |== ((4 -> (2 -> 1)) -> 1)
PZERO is defined: (((PAIR:33)(ZERO:20))(ZERO:20))
the type of expression is: (((A -> (B -> B)) -> ((C -> (D -> D)) -> E)) -> E)
please input a lambda term with ";":
typing step 1 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2))))]
(PAIR:35) |== (5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))
typing step 2 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10))]
(SND:33) |== (((13 -> (11 -> 11)) -> 10) -> 10)
typing step 3 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10))]
(p:1) |== 1
typing step 4 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(5,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10))]
((SND:33)(p:1)) |== 10
typing step 5 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10))]
((PAIR:35)((SND:33)(p:1))) |== (3 -> ((5 -> (3 -> 2)) -> 2))
typing step 6 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17))))]
(SUCC:21) |== (((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))
typing step 7 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))), 27(27,27), 28(28,28), 29(29,(28 -> 28)), 30(30,30), 31(31,(30 -> (28 -> 28))), 32(32,((30 -> (28 -> 28)) -> 27)), 33(33,(((30 -> (28 -> 28)) -> 27) -> 27))]
(SND:33) |== (((30 -> (28 -> 28)) -> 27) -> 27)
typing step 8 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))), 27(27,27), 28(28,28), 29(29,(28 -> 28)), 30(30,30), 31(31,(30 -> (28 -> 28))), 32(32,((30 -> (28 -> 28)) -> 27)), 33(33,(((30 -> (28 -> 28)) -> 27) -> 27))]
(p:1) |== 1
typing step 9 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(10,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))), 27(10,27), 28(11,28), 29(29,(28 -> 28)), 30(13,30), 31(31,(30 -> (28 -> 28))), 32(32,((30 -> (28 -> 28)) -> 27)), 33(33,(((30 -> (28 -> 28)) -> 27) -> 27))]
((SND:33)(p:1)) |== 27
typing step 10 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(3,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(25,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))), 27(10,27), 28(11,28), 29(29,(28 -> 28)), 30(13,30), 31(31,(30 -> (28 -> 28))), 32(32,((30 -> (28 -> 28)) -> 27)), 33(33,(((30 -> (28 -> 28)) -> 27) -> 27))]
((SUCC:21)((SND:33)(p:1))) |== ((20 -> 17) -> (18 -> 17))
typing step 11 and top = 121:
abs: [1]
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(22,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(25,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))), 27(10,27), 28(11,28), 29(29,(28 -> 28)), 30(13,30), 31(31,(30 -> (28 -> 28))), 32(32,((30 -> (28 -> 28)) -> 27)), 33(33,(((30 -> (28 -> 28)) -> 27) -> 27))]
(((PAIR:35)((SND:33)(p:1)))((SUCC:21)((SND:33)(p:1)))) |== ((5 -> (3 -> 2)) -> 2)
typing step 12 and top = 120:
abs: []
type_env[] = [0(0,int), 1(15,1), 2(2,2), 3(22,3), 4(4,(3 -> 2)), 5(10,5), 6(6,(5 -> (3 -> 2))), 7(7,((5 -> (3 -> 2)) -> 2)), 8(8,(3 -> ((5 -> (3 -> 2)) -> 2))), 9(9,(5 -> (3 -> ((5 -> (3 -> 2)) -> 2)))), 10(25,10), 11(11,11), 12(12,(11 -> 11)), 13(13,13), 14(14,(13 -> (11 -> 11))), 15(15,((13 -> (11 -> 11)) -> 10)), 16(16,(((13 -> (11 -> 11)) -> 10) -> 10)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,20), 21(21,(20 -> 17)), 22(22,((20 -> 17) -> (18 -> 17))), 23(23,(18 -> 20)), 24(24,(20 -> 17)), 25(25,((20 -> 17) -> (18 -> 20))), 26(26,(((20 -> 17) -> (18 -> 20)) -> ((20 -> 17) -> (18 -> 17)))), 27(10,27), 28(11,28), 29(29,(28 -> 28)), 30(13,30), 31(31,(30 -> (28 -> 28))), 32(32,((30 -> (28 -> 28)) -> 27)), 33(33,(((30 -> (28 -> 28)) -> 27) -> 27)), 34(34,(1 -> ((5 -> (3 -> 2)) -> 2)))]
(@p.(((PAIR:35)((SND:33)(p:1)))((SUCC:21)((SND:33)(p:1))))) |== (1 -> ((5 -> (3 -> 2)) -> 2))
PSUCC is defined: (@p.(((PAIR:35)((SND:33)(p:1)))((SUCC:21)((SND:33)(p:1)))))
the type of expression is: (((A -> (B -> B)) -> ((C -> D) -> (E -> C))) -> ((((C -> D) -> (E -> C)) -> (((C -> D) -> (E -> D)) -> F)) -> F))
please input a lambda term with ";":
typing step 1 and top = 122:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2))]
(FST:35) |== (((3 -> (4 -> 3)) -> 2) -> 2)
typing step 2 and top = 122:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2))]
(n:1) |== 1
typing step 3 and top = 122:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,13), 14(14,(13 -> 10)), 15(15,((13 -> 10) -> (11 -> 10))), 16(16,(((13 -> 10) -> (11 -> 10)) -> 9)), 17(17,(11 -> 13)), 18(18,(13 -> 10)), 19(19,((13 -> 10) -> (11 -> 13))), 20(20,(((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9))), 21(21,((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)), 22(22,(11 -> 13)), 23(23,(13 -> 10)), 24(24,((13 -> 10) -> (11 -> 13))), 25(25,25), 26(26,(25 -> 25)), 27(27,27), 28(28,(27 -> (25 -> 25))), 29(29,((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13)))), 30(30,(((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)))]
(PSUCC:2) |== (((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9))
typing step 4 and top = 122:
abs: [(31 -> 32)]
type_env[] = [0(0,int), 1(1,(31 -> 32)), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,13), 14(14,(13 -> 10)), 15(15,((13 -> 10) -> (11 -> 10))), 16(16,(((13 -> 10) -> (11 -> 10)) -> 9)), 17(17,(11 -> 13)), 18(18,(13 -> 10)), 19(19,((13 -> 10) -> (11 -> 13))), 20(20,(((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9))), 21(21,((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)), 22(22,(11 -> 13)), 23(23,(13 -> 10)), 24(24,((13 -> 10) -> (11 -> 13))), 25(25,25), 26(26,(25 -> 25)), 27(27,27), 28(28,(27 -> (25 -> 25))), 29(29,((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13)))), 30(30,(((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9))), 31(30,31), 32(32,32)]
((n:1)(PSUCC:2)) |== 32
typing step 5 and top = 122:
abs: [(31 -> 32)]
type_env[] = [0(0,int), 1(1,(31 -> 32)), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,13), 14(14,(13 -> 10)), 15(15,((13 -> 10) -> (11 -> 10))), 16(16,(((13 -> 10) -> (11 -> 10)) -> 9)), 17(17,(11 -> 13)), 18(18,(13 -> 10)), 19(19,((13 -> 10) -> (11 -> 13))), 20(20,(((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9))), 21(21,((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)), 22(22,(11 -> 13)), 23(23,(13 -> 10)), 24(24,((13 -> 10) -> (11 -> 13))), 25(25,25), 26(26,(25 -> 25)), 27(27,27), 28(28,(27 -> (25 -> 25))), 29(29,((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13)))), 30(30,(((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9))), 31(30,31), 32(32,32), 33(33,33), 34(34,34), 35(35,(34 -> 34)), 36(36,36), 37(37,(36 -> (34 -> 34))), 38(38,((36 -> (34 -> 34)) -> 33)), 39(39,39), 40(40,(39 -> 39)), 41(41,41), 42(42,(41 -> (39 -> 39))), 43(43,((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33))), 44(44,(((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33)) -> 33))]
(PZERO:3) |== (((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33)) -> 33)
typing step 6 and top = 122:
abs: [(31 -> (45 -> 46))]
type_env[] = [0(0,int), 1(1,(31 -> (45 -> 46))), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,13), 14(14,(13 -> 10)), 15(15,((13 -> 10) -> (11 -> 10))), 16(16,(((13 -> 10) -> (11 -> 10)) -> 9)), 17(17,(11 -> 13)), 18(18,(13 -> 10)), 19(19,((13 -> 10) -> (11 -> 13))), 20(20,(((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9))), 21(21,((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)), 22(22,(11 -> 13)), 23(23,(13 -> 10)), 24(24,((13 -> 10) -> (11 -> 13))), 25(25,25), 26(26,(25 -> 25)), 27(27,27), 28(28,(27 -> (25 -> 25))), 29(29,((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13)))), 30(30,(((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9))), 31(30,31), 32(32,(45 -> 46)), 33(33,33), 34(34,34), 35(35,(34 -> 34)), 36(36,36), 37(37,(36 -> (34 -> 34))), 38(38,((36 -> (34 -> 34)) -> 33)), 39(39,39), 40(40,(39 -> 39)), 41(41,41), 42(42,(41 -> (39 -> 39))), 43(43,((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33))), 44(44,(((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33)) -> 33)), 45(44,45), 46(46,46)]
(((n:1)(PSUCC:2))(PZERO:3)) |== 46
typing step 7 and top = 122:
abs: [(31 -> (45 -> 46))]
type_env[] = [0(0,int), 1(1,(31 -> (45 -> 46))), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,13), 14(14,(13 -> 10)), 15(15,((13 -> 10) -> (11 -> 10))), 16(16,(((13 -> 10) -> (11 -> 10)) -> 9)), 17(17,(11 -> 13)), 18(18,(13 -> 10)), 19(19,((13 -> 10) -> (11 -> 13))), 20(20,(((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9))), 21(21,((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)), 22(22,(11 -> 13)), 23(23,(13 -> 10)), 24(24,((13 -> 10) -> (11 -> 13))), 25(25,25), 26(26,(25 -> 25)), 27(27,27), 28(28,(27 -> (25 -> 25))), 29(29,((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13)))), 30(30,(((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9))), 31(30,31), 32(32,(45 -> 46)), 33(33,33), 34(34,34), 35(35,(34 -> 34)), 36(36,36), 37(37,(36 -> (34 -> 34))), 38(38,((36 -> (34 -> 34)) -> 33)), 39(39,39), 40(40,(39 -> 39)), 41(41,41), 42(42,(41 -> (39 -> 39))), 43(43,((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33))), 44(44,(((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33)) -> 33)), 45(44,45), 46(7,46)]
((FST:35)(((n:1)(PSUCC:2))(PZERO:3))) |== 2
typing step 8 and top = 121:
abs: []
type_env[] = [0(0,int), 1(1,(31 -> (45 -> 46))), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,(3 -> (4 -> 3))), 7(7,((3 -> (4 -> 3)) -> 2)), 8(8,(((3 -> (4 -> 3)) -> 2) -> 2)), 9(9,9), 10(10,10), 11(11,11), 12(12,(11 -> 10)), 13(13,13), 14(14,(13 -> 10)), 15(15,((13 -> 10) -> (11 -> 10))), 16(16,(((13 -> 10) -> (11 -> 10)) -> 9)), 17(17,(11 -> 13)), 18(18,(13 -> 10)), 19(19,((13 -> 10) -> (11 -> 13))), 20(20,(((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9))), 21(21,((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9)), 22(22,(11 -> 13)), 23(23,(13 -> 10)), 24(24,((13 -> 10) -> (11 -> 13))), 25(25,25), 26(26,(25 -> 25)), 27(27,27), 28(28,(27 -> (25 -> 25))), 29(29,((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13)))), 30(30,(((27 -> (25 -> 25)) -> ((13 -> 10) -> (11 -> 13))) -> ((((13 -> 10) -> (11 -> 13)) -> (((13 -> 10) -> (11 -> 10)) -> 9)) -> 9))), 31(30,31), 32(32,(45 -> 46)), 33(33,33), 34(34,34), 35(35,(34 -> 34)), 36(36,36), 37(37,(36 -> (34 -> 34))), 38(38,((36 -> (34 -> 34)) -> 33)), 39(39,39), 40(40,(39 -> 39)), 41(41,41), 42(42,(41 -> (39 -> 39))), 43(43,((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33))), 44(44,(((41 -> (39 -> 39)) -> ((36 -> (34 -> 34)) -> 33)) -> 33)), 45(44,45), 46(7,46), 47(47,((31 -> (45 -> 46)) -> 2))]
(@n.((FST:35)(((n:1)(PSUCC:2))(PZERO:3)))) |== ((31 -> (45 -> 46)) -> 2)
PREX is defined: (@n.((FST:35)(((n:1)(PSUCC:2))(PZERO:3))))
the type of expression is: (((((A -> (B -> B)) -> ((C -> D) -> (E -> C))) -> ((((C -> D) -> (E -> C)) -> (((C -> D) -> (E -> D)) -> F)) -> F)) -> ((((G -> (H -> H)) -> ((I -> (J -> J)) -> K)) -> K) -> ((L -> (M -> L)) -> N))) -> N)
please input a lambda term with ";":
typing step 1 and top = 124:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3))))]
(PAIR:38) |== (6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))
typing step 2 and top = 124:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3))))]
(f:2) |== 1
typing step 3 and top = 124:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11))]
(FST:37) |== (((12 -> (13 -> 12)) -> 11) -> 11)
typing step 4 and top = 124:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11))]
(p:1) |== 2
typing step 5 and top = 124:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(16,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11))]
((FST:37)(p:1)) |== 11
typing step 6 and top = 124:
abs: [2,(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(6,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19)]
((f:2)((FST:37)(p:1))) |== 19
typing step 7 and top = 124:
abs: [2,(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19)]
((PAIR:38)((f:2)((FST:37)(p:1)))) |== (4 -> ((6 -> (4 -> 3)) -> 3))
typing step 8 and top = 124:
abs: [2,(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20))]
(FST:37) |== (((21 -> (22 -> 21)) -> 20) -> 20)
typing step 9 and top = 124:
abs: [2,(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19), 20(20,20), 21(21,21), 22(22,22), 23(23,(22 -> 21)), 24(24,(21 -> (22 -> 21))), 25(25,((21 -> (22 -> 21)) -> 20)), 26(26,(((21 -> (22 -> 21)) -> 20) -> 20))]
(p:1) |== 2
typing step 10 and top = 124:
abs: [2,(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(4,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19), 20(11,20), 21(12,21), 22(13,22), 23(23,(22 -> 12)), 24(24,(21 -> (22 -> 12))), 25(25,((21 -> (22 -> 12)) -> 20)), 26(26,(((21 -> (22 -> 12)) -> 20) -> 20))]
((FST:37)(p:1)) |== 20
typing step 11 and top = 124:
abs: [2,(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(11,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19), 20(11,20), 21(12,21), 22(13,22), 23(23,(22 -> 12)), 24(24,(21 -> (22 -> 12))), 25(25,((21 -> (22 -> 12)) -> 20)), 26(26,(((21 -> (22 -> 12)) -> 20) -> 20))]
(((PAIR:38)((f:2)((FST:37)(p:1))))((FST:37)(p:1))) |== ((6 -> (4 -> 3)) -> 3)
typing step 12 and top = 123:
abs: [(18 -> 19)]
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(11,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19), 20(11,20), 21(12,21), 22(13,22), 23(23,(22 -> 12)), 24(24,(21 -> (22 -> 12))), 25(25,((21 -> (22 -> 12)) -> 20)), 26(26,(((21 -> (22 -> 12)) -> 20) -> 20)), 27(27,(2 -> ((6 -> (4 -> 3)) -> 3)))]
(@p.(((PAIR:38)((f:2)((FST:37)(p:1))))((FST:37)(p:1)))) |== (2 -> ((6 -> (4 -> 3)) -> 3))
typing step 13 and top = 122:
abs: []
type_env[] = [0(0,int), 1(1,(18 -> 19)), 2(16,2), 3(3,3), 4(11,4), 5(5,(4 -> 3)), 6(19,6), 7(7,(6 -> (4 -> 3))), 8(8,((6 -> (4 -> 3)) -> 3)), 9(9,(4 -> ((6 -> (4 -> 3)) -> 3))), 10(10,(6 -> (4 -> ((6 -> (4 -> 3)) -> 3)))), 11(11,11), 12(12,12), 13(13,13), 14(14,(13 -> 12)), 15(15,(12 -> (13 -> 12))), 16(16,((12 -> (13 -> 12)) -> 11)), 17(17,(((12 -> (13 -> 12)) -> 11) -> 11)), 18(11,18), 19(19,19), 20(11,20), 21(12,21), 22(13,22), 23(23,(22 -> 12)), 24(24,(21 -> (22 -> 12))), 25(25,((21 -> (22 -> 12)) -> 20)), 26(26,(((21 -> (22 -> 12)) -> 20) -> 20)), 27(27,(2 -> ((6 -> (4 -> 3)) -> 3))), 28(28,((18 -> 19) -> (2 -> ((6 -> (4 -> 3)) -> 3))))]
(@f.(@p.(((PAIR:38)((f:2)((FST:37)(p:1))))((FST:37)(p:1))))) |== ((18 -> 19) -> (2 -> ((6 -> (4 -> 3)) -> 3)))
PREFN is defined: (@f.(@p.(((PAIR:38)((f:2)((FST:37)(p:1))))((FST:37)(p:1)))))
the type of expression is: ((A -> B) -> (((C -> (D -> C)) -> A) -> ((B -> (A -> E)) -> E)))
please input a lambda term with ";":
typing step 1 and top = 126:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4))]
(SND:38) |== (((7 -> (5 -> 5)) -> 4) -> 4)
typing step 2 and top = 126:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4))]
(n:3) |== 1
typing step 3 and top = 126:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))))]
(PREFN:4) |== ((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))
typing step 4 and top = 126:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))))]
(f:2) |== 2
typing step 5 and top = 126:
abs: [3,2,1]
type_env[] = [0(0,int), 1(1,1), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))))]
((PREFN:4)(f:2)) |== (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))
typing step 6 and top = 126:
abs: [3,2,(25 -> 26)]
type_env[] = [0(0,int), 1(1,(25 -> 26)), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,26)]
((n:3)((PREFN:4)(f:2))) |== 26
typing step 7 and top = 126:
abs: [3,2,(25 -> 26)]
type_env[] = [0(0,int), 1(1,(25 -> 26)), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,26), 27(27,27), 28(28,28), 29(29,(28 -> 27)), 30(30,30), 31(31,(30 -> (28 -> 27))), 32(32,((30 -> (28 -> 27)) -> 27)), 33(33,(28 -> ((30 -> (28 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((30 -> (28 -> 27)) -> 27))))]
(PAIR:40) |== (30 -> (28 -> ((30 -> (28 -> 27)) -> 27)))
typing step 8 and top = 126:
abs: [3,2,(25 -> 26)]
type_env[] = [0(0,int), 1(1,(25 -> 26)), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,26), 27(27,27), 28(28,28), 29(29,(28 -> 27)), 30(30,30), 31(31,(30 -> (28 -> 27))), 32(32,((30 -> (28 -> 27)) -> 27)), 33(33,(28 -> ((30 -> (28 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((30 -> (28 -> 27)) -> 27))))]
(x:1) |== 3
typing step 9 and top = 126:
abs: [3,2,(25 -> 26)]
type_env[] = [0(0,int), 1(1,(25 -> 26)), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,26), 27(27,27), 28(28,28), 29(29,(28 -> 27)), 30(3,30), 31(31,(30 -> (28 -> 27))), 32(32,((30 -> (28 -> 27)) -> 27)), 33(33,(28 -> ((30 -> (28 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((30 -> (28 -> 27)) -> 27))))]
((PAIR:40)(x:1)) |== (28 -> ((30 -> (28 -> 27)) -> 27))
typing step 10 and top = 126:
abs: [3,2,(25 -> 26)]
type_env[] = [0(0,int), 1(1,(25 -> 26)), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,26), 27(27,27), 28(28,28), 29(29,(28 -> 27)), 30(3,30), 31(31,(30 -> (28 -> 27))), 32(32,((30 -> (28 -> 27)) -> 27)), 33(33,(28 -> ((30 -> (28 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((30 -> (28 -> 27)) -> 27))))]
(x:1) |== 3
typing step 11 and top = 126:
abs: [3,2,(25 -> 26)]
type_env[] = [0(0,int), 1(1,(25 -> 26)), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,26), 27(27,27), 28(3,28), 29(29,(28 -> 27)), 30(3,30), 31(31,(30 -> (28 -> 27))), 32(32,((30 -> (28 -> 27)) -> 27)), 33(33,(28 -> ((30 -> (28 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((30 -> (28 -> 27)) -> 27))))]
(((PAIR:40)(x:1))(x:1)) |== ((30 -> (28 -> 27)) -> 27)
typing step 12 and top = 126:
abs: [3,2,(25 -> (35 -> 36))]
type_env[] = [0(0,int), 1(1,(25 -> (35 -> 36))), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,(35 -> 36)), 27(27,27), 28(3,28), 29(29,(3 -> 27)), 30(3,30), 31(31,(3 -> (3 -> 27))), 32(32,((3 -> (3 -> 27)) -> 27)), 33(33,(28 -> ((3 -> (3 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((3 -> (3 -> 27)) -> 27)))), 35(32,35), 36(36,36)]
(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1))) |== 36
typing step 13 and top = 126:
abs: [3,2,(25 -> (35 -> 36))]
type_env[] = [0(0,int), 1(1,(25 -> (35 -> 36))), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,(35 -> 36)), 27(27,27), 28(3,28), 29(29,(3 -> 27)), 30(3,30), 31(31,(3 -> (3 -> 27))), 32(32,((3 -> (3 -> 27)) -> 27)), 33(33,(28 -> ((3 -> (3 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((3 -> (3 -> 27)) -> 27)))), 35(32,35), 36(9,36)]
((SND:38)(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1)))) |== 4
typing step 14 and top = 125:
abs: [2,(25 -> (35 -> 36))]
type_env[] = [0(0,int), 1(1,(25 -> (35 -> 36))), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,(35 -> 36)), 27(27,27), 28(3,28), 29(29,(3 -> 27)), 30(3,30), 31(31,(3 -> (3 -> 27))), 32(32,((3 -> (3 -> 27)) -> 27)), 33(33,(28 -> ((3 -> (3 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((3 -> (3 -> 27)) -> 27)))), 35(32,35), 36(9,36), 37(37,(3 -> 4))]
(@x.((SND:38)(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1))))) |== (3 -> 4)
typing step 15 and top = 124:
abs: [(25 -> (35 -> 36))]
type_env[] = [0(0,int), 1(1,(25 -> (35 -> 36))), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,(35 -> 36)), 27(27,27), 28(3,28), 29(29,(3 -> 27)), 30(3,30), 31(31,(3 -> (3 -> 27))), 32(32,((3 -> (3 -> 27)) -> 27)), 33(33,(28 -> ((3 -> (3 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((3 -> (3 -> 27)) -> 27)))), 35(32,35), 36(9,36), 37(37,(3 -> 4)), 38(38,(2 -> (3 -> 4)))]
(@f.(@x.((SND:38)(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1)))))) |== (2 -> (3 -> 4))
typing step 16 and top = 123:
abs: []
type_env[] = [0(0,int), 1(1,(25 -> (35 -> 36))), 2(23,2), 3(3,3), 4(4,4), 5(5,5), 6(6,(5 -> 5)), 7(7,7), 8(8,(7 -> (5 -> 5))), 9(9,((7 -> (5 -> 5)) -> 4)), 10(10,(((7 -> (5 -> 5)) -> 4) -> 4)), 11(11,11), 12(12,12), 13(13,(12 -> 11)), 14(14,14), 15(15,(14 -> (12 -> 11))), 16(16,((14 -> (12 -> 11)) -> 11)), 17(17,17), 18(18,18), 19(19,(18 -> 17)), 20(20,(17 -> (18 -> 17))), 21(21,((17 -> (18 -> 17)) -> 12)), 22(22,(((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11))), 23(23,(12 -> 14)), 24(24,((12 -> 14) -> (((17 -> (18 -> 17)) -> 12) -> ((14 -> (12 -> 11)) -> 11)))), 25(22,25), 26(26,(35 -> 36)), 27(27,27), 28(3,28), 29(29,(3 -> 27)), 30(3,30), 31(31,(3 -> (3 -> 27))), 32(32,((3 -> (3 -> 27)) -> 27)), 33(33,(28 -> ((3 -> (3 -> 27)) -> 27))), 34(34,(30 -> (28 -> ((3 -> (3 -> 27)) -> 27)))), 35(32,35), 36(9,36), 37(37,(3 -> 4)), 38(38,(2 -> (3 -> 4))), 39(39,((25 -> (35 -> 36)) -> (2 -> (3 -> 4))))]
(@n.(@f.(@x.((SND:38)(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1))))))) |== ((25 -> (35 -> 36)) -> (2 -> (3 -> 4)))
PRE is defined: (@n.(@f.(@x.((SND:38)(((n:3)((PREFN:4)(f:2)))(((PAIR:40)(x:1))(x:1)))))))
the type of expression is: (((((A -> (B -> A)) -> C) -> ((D -> (C -> E)) -> E)) -> (((F -> (F -> G)) -> G) -> ((H -> (I -> I)) -> J))) -> ((C -> D) -> (F -> J)))
please input a lambda term with ";":
typing step 1 and top = 126:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(h:2) |== 1
typing step 2 and top = 126:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:1) |== 2
typing step 3 and top = 126:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:1) |== 2
type A and type (A -> B) can't be unified!
typing step 4 and top = 126:
abs: [(3 -> 4),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
((x:1)(x:1)) |== NULL
typing step 5 and top = 126:
abs: [(3 -> 4),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
((h:2)((x:1)(x:1))) |== NULL
typing step 6 and top = 125:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
(@x.((h:2)((x:1)(x:1)))) |== NULL
typing step 7 and top = 125:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
((@x.((h:2)((x:1)(x:1))))(@x.((h:2)((x:1)(x:1))))) |== NULL
typing step 8 and top = 124:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
(@h.((@x.((h:2)((x:1)(x:1))))(@x.((h:2)((x:1)(x:1)))))) |== NULL
REC is defined: (@h.((@x.((h:2)((x:1)(x:1))))(@x.((h:2)((x:1)(x:1))))))
the type of expression is: NULL
please input a lambda term with ";":
typing step 1 and top = 127:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(f:2) |== 1
typing step 2 and top = 127:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:1) |== 2
typing step 3 and top = 127:
abs: [2,1]
type_env[] = [0(0,int), 1(1,1), 2(2,2)]
(x:1) |== 2
type A and type (A -> B) can't be unified!
typing step 4 and top = 127:
abs: [(3 -> 4),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
((x:1)(x:1)) |== NULL
typing step 5 and top = 127:
abs: [(3 -> 4),1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
((f:2)((x:1)(x:1))) |== NULL
typing step 6 and top = 126:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
(@x.((f:2)((x:1)(x:1)))) |== NULL
typing step 7 and top = 126:
abs: [1]
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
((@x.((f:2)((x:1)(x:1))))(@x.((f:2)((x:1)(x:1))))) |== NULL
typing step 8 and top = 125:
abs: []
type_env[] = [0(0,int), 1(1,1), 2(2,(3 -> 4)), 3(3,3), 4(4,4)]
(@f.((@x.((f:2)((x:1)(x:1))))(@x.((f:2)((x:1)(x:1)))))) |== NULL
Y is defined: (@f.((@x.((f:2)((x:1)(x:1))))(@x.((f:2)((x:1)(x:1))))))
the type of expression is: NULL
please input a lambda term with ";":
id x is unbound!
